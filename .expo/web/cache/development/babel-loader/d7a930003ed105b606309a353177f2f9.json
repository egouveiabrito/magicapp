{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Search;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _api = _interopRequireDefault(require(\"../services/api\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _LazyImage = _interopRequireDefault(require(\"../components/LazyImage\"));\n\nvar _styles = require(\"./styles\");\n\nvar _jsxFileName = \"C:\\\\React\\\\magic\\\\src\\\\pages\\\\Search.js\";\n\nvar _Dimensions$get = _reactNative.Dimensions.get(\"window\"),\n    width = _Dimensions$get.width;\n\nvar PADDING = 16;\nvar SEARCH_FULL_WIDTH = width - PADDING * 2;\nvar SEARCH_SHRINK_WIDTH = width - PADDING - 90;\n\nvar AnimatedTouchable = _reactNative.Animated.createAnimatedComponent(_reactNative.TouchableOpacity);\n\nfunction Search() {\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      docs = _useState2[0],\n      setDocs = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(1),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      total = _useState6[0],\n      setTotal = _useState6[1];\n\n  var _useState7 = (0, _react.useState)([]),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      viewable = _useState8[0],\n      setViewable = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(false),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var _useState11 = (0, _react.useState)(false),\n      _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n      refreshing = _useState12[0],\n      setRefreshing = _useState12[1];\n\n  var _useState13 = (0, _react.useState)(new _reactNative.Animated.Value(SEARCH_FULL_WIDTH)),\n      _useState14 = (0, _slicedToArray2.default)(_useState13, 1),\n      inputLength = _useState14[0];\n\n  var _useState15 = (0, _react.useState)(new _reactNative.Animated.Value(SEARCH_FULL_WIDTH)),\n      _useState16 = (0, _slicedToArray2.default)(_useState15, 1),\n      cancelPosition = _useState16[0];\n\n  var _useState17 = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n      _useState18 = (0, _slicedToArray2.default)(_useState17, 1),\n      opacity = _useState18[0];\n\n  var _useState19 = (0, _react.useState)(false),\n      _useState20 = (0, _slicedToArray2.default)(_useState19, 1),\n      searchBarFocused = _useState20[0];\n\n  (0, _react.useEffect)(function () {\n    loadPage();\n  }, []);\n\n  function validadeJson(Info) {\n    try {\n      var Cards = new Array();\n\n      for (var index = 0; index < Info.data.length; index++) {\n        Cards.push({\n          _id: Info.data[index].id,\n          title: Info.data[index].name + ' - ' + Info.data[index].type_line,\n          url: Info.data[index].image_uris == undefined ? 'https://www.buritama.sp.leg.br/imagens/parlamentares-2013-2016/sem-foto.jpg/image' : Info.data[index].image_uris.normal,\n          description: Info.data[index].oracle_text\n        });\n      }\n\n      return Cards;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function loadPage() {\n    var pageNumber,\n        shouldRefresh,\n        response,\n        data,\n        _args = arguments;\n    return _regenerator.default.async(function loadPage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            pageNumber = _args.length > 0 && _args[0] !== undefined ? _args[0] : page;\n            shouldRefresh = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;\n\n            if (!(pageNumber === total)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 4:\n            if (!loading) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 6:\n            setLoading(true);\n            _context.prev = 7;\n            _context.next = 10;\n            return _regenerator.default.awrap(_api.default.get('/cards?page=' + page));\n\n          case 10:\n            response = _context.sent;\n            data = validadeJson(response.data);\n            setLoading(false);\n            setTotal(Math.floor(data.length / 4));\n            setPage(pageNumber + 1);\n            setDocs(shouldRefresh ? data : [].concat((0, _toConsumableArray2.default)(docs), (0, _toConsumableArray2.default)(data)));\n            _context.next = 21;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](7);\n            console.log(_context.t0.message);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[7, 18]], Promise);\n  }\n\n  function searchPage(search) {\n    var response, data;\n    return _regenerator.default.async(function searchPage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(search.length <= 3)) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            _context2.prev = 2;\n            _context2.next = 5;\n            return _regenerator.default.awrap(_api.default.get('/cards/search?q=' + search));\n\n          case 5:\n            response = _context2.sent;\n            data = validadeJson(response.data);\n            setTotal(Math.floor(data.length / 4));\n            setPage(1);\n            setDocs(data);\n            _context2.next = 15;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](2);\n            console.log(_context2.t0.message);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 12]], Promise);\n  }\n\n  function refreshList() {\n    return _regenerator.default.async(function refreshList$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setRefreshing(true);\n            _context3.next = 3;\n            return _regenerator.default.awrap(loadPage(1, true));\n\n          case 3:\n            setRefreshing(false);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var handleViewableChanged = (0, _react.useCallback)(function (_ref) {\n    var changed = _ref.changed;\n    setViewable(changed.map(function (_ref2) {\n      var item = _ref2.item;\n      return item._id;\n    }));\n  }, []);\n\n  function onFocus() {\n    _reactNative.Animated.parallel([_reactNative.Animated.timing(inputLength, {\n      toValue: SEARCH_SHRINK_WIDTH,\n      duration: 250\n    }), _reactNative.Animated.timing(cancelPosition, {\n      toValue: 16,\n      duration: 400\n    }), _reactNative.Animated.timing(opacity, {\n      toValue: 1,\n      duration: 250\n    })]).start();\n  }\n\n  function onBlur() {\n    _reactNative.Animated.parallel([_reactNative.Animated.timing(inputLength, {\n      toValue: SEARCH_FULL_WIDTH,\n      duration: 250\n    }), _reactNative.Animated.timing(cancelPosition, {\n      toValue: 0,\n      duration: 250\n    }), _reactNative.Animated.timing(opacity, {\n      toValue: 0,\n      duration: 250\n    })]).start();\n  }\n\n  return _react.default.createElement(_styles.Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    }\n  }, _react.default.createElement(_reactNative.FlatList, {\n    key: \"list\",\n    data: docs,\n    keyExtractor: function keyExtractor(item) {\n      return String(item._id);\n    },\n    onViewableItemsChanged: handleViewableChanged,\n    viewabilityConfig: {\n      viewAreaCoveragePercentThreshold: 50\n    },\n    showsVerticalScrollIndicator: false,\n    onRefresh: refreshList,\n    refreshing: refreshing,\n    onEndReachedThreshold: 0.1,\n    onEndReached: function onEndReached() {\n      return loadPage();\n    },\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return _react.default.createElement(_styles.Post, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        }\n      }, _react.default.createElement(_styles.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        }\n      }, _react.default.createElement(_styles.Avatar, {\n        source: {\n          uri: item.url\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        }\n      }), _react.default.createElement(_styles.Name, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        }\n      }, item.title)), _react.default.createElement(_LazyImage.default, {\n        aspectRatio: 0.834,\n        shouldLoad: viewable.includes(item._id),\n        smallSource: {\n          uri: item.url\n        },\n        source: {\n          uri: item.url\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        }\n      }), _react.default.createElement(_styles.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        }\n      }, _react.default.createElement(_styles.Name, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        }\n      }, item.type_line), \" \", item.description));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    }\n  }));\n}","map":{"version":3,"sources":["C:/React/magic/src/pages/Search.js"],"names":["Dimensions","get","width","PADDING","SEARCH_FULL_WIDTH","SEARCH_SHRINK_WIDTH","AnimatedTouchable","Animated","createAnimatedComponent","TouchableOpacity","Search","docs","setDocs","page","setPage","total","setTotal","viewable","setViewable","loading","setLoading","refreshing","setRefreshing","Value","inputLength","cancelPosition","opacity","searchBarFocused","loadPage","validadeJson","Info","Cards","Array","index","data","length","push","_id","id","title","name","type_line","url","image_uris","undefined","normal","description","oracle_text","error","console","log","pageNumber","shouldRefresh","api","response","Math","floor","message","searchPage","search","refreshList","handleViewableChanged","changed","map","item","onFocus","parallel","timing","toValue","duration","start","onBlur","String","viewAreaCoveragePercentThreshold","uri","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport api from '../services/api';\r\nimport { View, TouchableOpacity, TextInput, Dimensions, Animated, FlatList } from 'react-native';\r\nconst { width } = Dimensions.get(\"window\");\r\n\r\nimport LazyImage from '../components/LazyImage';\r\nimport { Container, Post, Header, Avatar, Name, Description, Loading } from './styles';\r\n\r\n\r\nconst PADDING = 16;\r\nconst SEARCH_FULL_WIDTH = width - PADDING * 2; //search_width when unfocused\r\nconst SEARCH_SHRINK_WIDTH = width - PADDING - 90; //search_width when focused\r\nconst AnimatedTouchable = Animated.createAnimatedComponent(TouchableOpacity);\r\n\r\n\r\nexport default function Search() {\r\n    \r\n        const [docs, setDocs] = useState([]);\r\n        const [page, setPage] = useState(1);\r\n        const [total, setTotal] = useState(0);\r\n        const [viewable, setViewable] = useState([]);\r\n        const [loading, setLoading] = useState(false);\r\n        const [refreshing, setRefreshing] = useState(false);\r\n        const [inputLength] = useState(new Animated.Value(SEARCH_FULL_WIDTH));\r\n        const [cancelPosition] = useState(new Animated.Value(SEARCH_FULL_WIDTH));\r\n        const [opacity] = useState(new Animated.Value(0));\r\n        const [searchBarFocused] = useState(false);\r\n\r\n        useEffect(() => { loadPage() }, []);\r\n\r\n        function validadeJson(Info){\r\n        try {\r\n            var Cards = new Array();\r\n            for (let index = 0; index < Info.data.length; index++) {\r\n                Cards.push( {\r\n                    _id: Info.data[index].id,\r\n                    title: Info.data[index].name + ' - ' + Info.data[index].type_line,\r\n                    url: Info.data[index].image_uris == undefined ? 'https://www.buritama.sp.leg.br/imagens/parlamentares-2013-2016/sem-foto.jpg/image' :\r\n                        Info.data[index].image_uris.normal,\r\n                    description: Info.data[index].oracle_text\r\n                });\r\n            }\r\n           return Cards;\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        }\r\n\r\n        async function loadPage(pageNumber = page, shouldRefresh = false) {\r\n\r\n            if (pageNumber === total) return;\r\n            if (loading) return;\r\n\r\n            setLoading(true);\r\n\r\n            try {\r\n                const response = await api.get('/cards?page=' + page);\r\n                const data = validadeJson(response.data);\r\n\r\n                setLoading(false);\r\n                setTotal(Math.floor(data.length / 4));\r\n                setPage(pageNumber + 1);\r\n                setDocs(shouldRefresh ? data : [...docs, ...data]);\r\n\r\n            } catch (error) {\r\n                console.log(error.message);\r\n            }\r\n        }\r\n\r\n        async function searchPage(search) {\r\n            \r\n            if (search.length <= 3) return;\r\n\r\n        try {\r\n\r\n            const response = await api.get('/cards/search?q=' + search);\r\n            const data = validadeJson(response.data);\r\n            \r\n            setTotal(Math.floor(data.length / 4));\r\n            setPage(1);\r\n            setDocs(data);\r\n\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n        }\r\n\r\n        async function refreshList() {\r\n            setRefreshing(true);\r\n\r\n            await loadPage(1, true);\r\n\r\n            setRefreshing(false);\r\n        }\r\n\r\n        const handleViewableChanged = useCallback(({ changed }) => {\r\n            setViewable(changed.map(({ item }) => item._id));\r\n        }, []);\r\n\r\n        function onFocus() {\r\n            Animated.parallel([\r\n                Animated.timing(inputLength, {\r\n                    toValue: SEARCH_SHRINK_WIDTH,\r\n                    duration: 250\r\n                }),\r\n                Animated.timing(cancelPosition, {\r\n                    toValue: 16,\r\n                    duration: 400\r\n                }),\r\n                Animated.timing(opacity, {\r\n                    toValue: 1,\r\n                    duration: 250\r\n                })\r\n            ]).start();\r\n        }\r\n\r\n        function onBlur() {\r\n            Animated.parallel([\r\n                Animated.timing(inputLength, {\r\n                    toValue: SEARCH_FULL_WIDTH,\r\n                    duration: 250\r\n                }),\r\n                Animated.timing(cancelPosition, {\r\n                    toValue: 0,\r\n                    duration: 250\r\n                }),\r\n                Animated.timing(opacity, {\r\n                    toValue: 0,\r\n                    duration: 250\r\n                })\r\n            ]).start();\r\n        }\r\n        \r\n    return (\r\n            <Container>\r\n               \r\n               <FlatList\r\n                    key=\"list\"\r\n                    data={docs}\r\n                    keyExtractor={item => String(item._id)}\r\n                    onViewableItemsChanged={handleViewableChanged}\r\n                    viewabilityConfig={{\r\n                        viewAreaCoveragePercentThreshold: 50,\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    onRefresh={refreshList}\r\n                    refreshing={refreshing}\r\n                    onEndReachedThreshold={0.1}\r\n                    onEndReached={() => loadPage()}\r\n                    renderItem={({ item }) => (\r\n                        <Post>\r\n                            <Header>\r\n                                <Avatar source={{ uri: item.url }} />\r\n                                <Name>{item.title}</Name>\r\n                            </Header>\r\n                        \r\n              \r\n                            <LazyImage \r\n                                aspectRatio={0.834}\r\n                                shouldLoad={viewable.includes(item._id)}\r\n                                smallSource={{ uri: item.url }}\r\n                                source={{ uri: item.url }}\r\n                            />    \r\n                            <Description>\r\n                                <Name>{item.type_line}</Name> {item.description}\r\n                            </Description>\r\n                        </Post>\r\n                )}\r\n            />\r\n    </Container>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"script"}