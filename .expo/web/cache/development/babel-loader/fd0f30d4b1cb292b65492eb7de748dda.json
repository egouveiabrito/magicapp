{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _SceneView = _interopRequireDefault(require(\"./SceneView\"));\n\nvar _jsxFileName = \"C:\\\\React\\\\magic\\\\node_modules\\\\react-navigation\\\\src\\\\views\\\\ResourceSavingSceneView.js\";\nvar FAR_FAR_AWAY = 3000;\n\nvar ResourceSavingSceneView = function (_React$PureComponent) {\n  (0, _inherits2.default)(ResourceSavingSceneView, _React$PureComponent);\n  (0, _createClass2.default)(ResourceSavingSceneView, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isFocused && !prevState.awake) {\n        return {\n          awake: true\n        };\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  function ResourceSavingSceneView(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ResourceSavingSceneView);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ResourceSavingSceneView).call(this));\n\n    _this._mustAlwaysBeVisible = function () {\n      return _this.props.animationEnabled || _this.props.swipeEnabled;\n    };\n\n    _this.state = {\n      awake: props.lazy ? props.isFocused : true\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(ResourceSavingSceneView, [{\n    key: \"render\",\n    value: function render() {\n      var awake = this.state.awake;\n      var _this$props = this.props,\n          isFocused = _this$props.isFocused,\n          childNavigation = _this$props.childNavigation,\n          navigation = _this$props.navigation,\n          removeClippedSubviews = _this$props.removeClippedSubviews,\n          lazy = _this$props.lazy,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"isFocused\", \"childNavigation\", \"navigation\", \"removeClippedSubviews\", \"lazy\"]);\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.container,\n        collapsable: false,\n        removeClippedSubviews: _reactNative.Platform.OS === 'android' ? removeClippedSubviews : !isFocused && removeClippedSubviews,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: this._mustAlwaysBeVisible() || isFocused ? styles.innerAttached : styles.innerDetached,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        }\n      }, awake ? _react.default.createElement(_SceneView.default, (0, _extends2.default)({}, rest, {\n        navigation: childNavigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        }\n      })) : null));\n    }\n  }]);\n  return ResourceSavingSceneView;\n}(_react.default.PureComponent);\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  innerAttached: {\n    flex: 1\n  },\n  innerDetached: {\n    flex: 1,\n    top: FAR_FAR_AWAY\n  }\n});\n\nvar _default = (0, _reactLifecyclesCompat.polyfill)(ResourceSavingSceneView);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/React/magic/node_modules/react-navigation/src/views/ResourceSavingSceneView.js"],"names":["FAR_FAR_AWAY","ResourceSavingSceneView","nextProps","prevState","isFocused","awake","props","_mustAlwaysBeVisible","animationEnabled","swipeEnabled","state","lazy","childNavigation","navigation","removeClippedSubviews","rest","styles","container","Platform","OS","innerAttached","innerDetached","React","PureComponent","StyleSheet","create","flex","overflow","top"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;;AAEA,IAAMA,YAAY,GAAG,IAArB;;IAEMC,uB;;;;6CAC4BC,S,EAAWC,S,EAAW;AACpD,UAAID,SAAS,CAACE,SAAV,IAAuB,CAACD,SAAS,CAACE,KAAtC,EAA6C;AAC3C,eAAO;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF;;;AAED,mCAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB;;AADiB,UA0CnBC,oBA1CmB,GA0CI,YAAM;AAC3B,aAAO,MAAKD,KAAL,CAAWE,gBAAX,IAA+B,MAAKF,KAAL,CAAWG,YAAjD;AACD,KA5CkB;;AAGjB,UAAKC,KAAL,GAAa;AACXL,MAAAA,KAAK,EAAEC,KAAK,CAACK,IAAN,GAAaL,KAAK,CAACF,SAAnB,GAA+B;AAD3B,KAAb;AAHiB;AAMlB;;;;6BAEQ;AAAA,UACCC,KADD,GACW,KAAKK,KADhB,CACCL,KADD;AAAA,wBASH,KAAKC,KATF;AAAA,UAGLF,SAHK,eAGLA,SAHK;AAAA,UAILQ,eAJK,eAILA,eAJK;AAAA,UAKLC,UALK,eAKLA,UALK;AAAA,UAMLC,qBANK,eAMLA,qBANK;AAAA,UAOLH,IAPK,eAOLA,IAPK;AAAA,UAQFI,IARE;AAWP,aACE,6BAAC,iBAAD;AACE,QAAA,KAAK,EAAEC,MAAM,CAACC,SADhB;AAEE,QAAA,WAAW,EAAE,KAFf;AAGE,QAAA,qBAAqB,EACnBC,sBAASC,EAAT,KAAgB,SAAhB,GACIL,qBADJ,GAEI,CAACV,SAAD,IAAcU,qBANtB;AAAA;AAAA;AAAA;AAAA;AAAA,SASE,6BAAC,iBAAD;AACE,QAAA,KAAK,EACH,KAAKP,oBAAL,MAA+BH,SAA/B,GACIY,MAAM,CAACI,aADX,GAEIJ,MAAM,CAACK,aAJf;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGhB,KAAK,GAAG,6BAAC,kBAAD,6BAAeU,IAAf;AAAqB,QAAA,UAAU,EAAEH,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH,GAA0D,IAPlE,CATF,CADF;AAqBD;;;EAjDmCU,eAAMC,a;;AAwD5C,IAAMP,MAAM,GAAGQ,wBAAWC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADoB;AAK/BP,EAAAA,aAAa,EAAE;AACbM,IAAAA,IAAI,EAAE;AADO,GALgB;AAQ/BL,EAAAA,aAAa,EAAE;AACbK,IAAAA,IAAI,EAAE,CADO;AAEbE,IAAAA,GAAG,EAAE5B;AAFQ;AARgB,CAAlB,CAAf;;eAce,qCAASC,uBAAT,C","sourcesContent":["import React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport { polyfill } from 'react-lifecycles-compat';\n\nimport SceneView from './SceneView';\n\nconst FAR_FAR_AWAY = 3000; // this should be big enough to move the whole view out of its container\n\nclass ResourceSavingSceneView extends React.PureComponent {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.isFocused && !prevState.awake) {\n      return { awake: true };\n    } else {\n      return null;\n    }\n  }\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      awake: props.lazy ? props.isFocused : true,\n    };\n  }\n\n  render() {\n    const { awake } = this.state;\n    const {\n      isFocused,\n      childNavigation,\n      navigation,\n      removeClippedSubviews,\n      lazy,\n      ...rest\n    } = this.props;\n\n    return (\n      <View\n        style={styles.container}\n        collapsable={false}\n        removeClippedSubviews={\n          Platform.OS === 'android'\n            ? removeClippedSubviews\n            : !isFocused && removeClippedSubviews\n        }\n      >\n        <View\n          style={\n            this._mustAlwaysBeVisible() || isFocused\n              ? styles.innerAttached\n              : styles.innerDetached\n          }\n        >\n          {awake ? <SceneView {...rest} navigation={childNavigation} /> : null}\n        </View>\n      </View>\n    );\n  }\n\n  _mustAlwaysBeVisible = () => {\n    return this.props.animationEnabled || this.props.swipeEnabled;\n  };\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  innerAttached: {\n    flex: 1,\n  },\n  innerDetached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n\nexport default polyfill(ResourceSavingSceneView);\n"]},"metadata":{},"sourceType":"script"}