{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = withNavigationFocus;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _hoistNonReactStatics = _interopRequireDefault(require(\"hoist-non-react-statics\"));\n\nvar _invariant = _interopRequireDefault(require(\"../utils/invariant\"));\n\nvar _withNavigation = _interopRequireDefault(require(\"./withNavigation\"));\n\nvar _jsxFileName = \"C:\\\\React\\\\magic\\\\node_modules\\\\react-navigation\\\\src\\\\views\\\\withNavigationFocus.js\";\n\nfunction withNavigationFocus(Component) {\n  var ComponentWithNavigationFocus = function (_React$Component) {\n    (0, _inherits2.default)(ComponentWithNavigationFocus, _React$Component);\n\n    function ComponentWithNavigationFocus(props) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, ComponentWithNavigationFocus);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ComponentWithNavigationFocus).call(this, props));\n      _this.state = {\n        isFocused: props.navigation ? props.navigation.isFocused() : false\n      };\n      return _this;\n    }\n\n    (0, _createClass2.default)(ComponentWithNavigationFocus, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        var navigation = this.props.navigation;\n        (0, _invariant.default)(!!navigation, 'withNavigationFocus can only be used on a view hierarchy of a navigator. The wrapped component is unable to get access to navigation from props or context.');\n        this.subscriptions = [navigation.addListener('didFocus', function () {\n          return _this2.setState({\n            isFocused: true\n          });\n        }), navigation.addListener('willBlur', function () {\n          return _this2.setState({\n            isFocused: false\n          });\n        })];\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.subscriptions.forEach(function (sub) {\n          return sub.remove();\n        });\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return _react.default.createElement(Component, (0, _extends2.default)({}, this.props, {\n          isFocused: this.state.isFocused,\n          ref: this.props.onRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          }\n        }));\n      }\n    }]);\n    return ComponentWithNavigationFocus;\n  }(_react.default.Component);\n\n  ComponentWithNavigationFocus.displayName = \"withNavigationFocus(\" + (Component.displayName || Component.name) + \")\";\n  return (0, _hoistNonReactStatics.default)((0, _withNavigation.default)(ComponentWithNavigationFocus), Component);\n}","map":{"version":3,"sources":["C:/React/magic/node_modules/react-navigation/src/views/withNavigationFocus.js"],"names":["withNavigationFocus","Component","ComponentWithNavigationFocus","props","state","isFocused","navigation","subscriptions","addListener","setState","forEach","sub","remove","onRef","React","displayName","name"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEe,SAASA,mBAAT,CAA6BC,SAA7B,EAAwC;AAAA,MAC/CC,4BAD+C;AAAA;;AAKnD,0CAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,oIAAMA,KAAN;AAEA,YAAKC,KAAL,GAAa;AACXC,QAAAA,SAAS,EAAEF,KAAK,CAACG,UAAN,GAAmBH,KAAK,CAACG,UAAN,CAAiBD,SAAjB,EAAnB,GAAkD;AADlD,OAAb;AAHiB;AAMlB;;AAXkD;AAAA;AAAA,0CAa/B;AAAA;;AAAA,YACVC,UADU,GACK,KAAKH,KADV,CACVG,UADU;AAElB,gCACE,CAAC,CAACA,UADJ,EAEE,6JAFF;AAKA,aAAKC,aAAL,GAAqB,CACnBD,UAAU,CAACE,WAAX,CAAuB,UAAvB,EAAmC;AAAA,iBACjC,MAAI,CAACC,QAAL,CAAc;AAAEJ,YAAAA,SAAS,EAAE;AAAb,WAAd,CADiC;AAAA,SAAnC,CADmB,EAInBC,UAAU,CAACE,WAAX,CAAuB,UAAvB,EAAmC;AAAA,iBACjC,MAAI,CAACC,QAAL,CAAc;AAAEJ,YAAAA,SAAS,EAAE;AAAb,WAAd,CADiC;AAAA,SAAnC,CAJmB,CAArB;AAQD;AA5BkD;AAAA;AAAA,6CA8B5B;AACrB,aAAKE,aAAL,CAAmBG,OAAnB,CAA2B,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,MAAJ,EAAJ;AAAA,SAA9B;AACD;AAhCkD;AAAA;AAAA,+BAkC1C;AACP,eACE,6BAAC,SAAD,6BACM,KAAKT,KADX;AAEE,UAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,SAFxB;AAGE,UAAA,GAAG,EAAE,KAAKF,KAAL,CAAWU,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAOD;AA1CkD;AAAA;AAAA,IACVC,eAAMb,SADI;;AAC/CC,EAAAA,4BAD+C,CAE5Ca,WAF4C,6BAEPd,SAAS,CAACc,WAAV,IAC1Cd,SAAS,CAACe,IAHuC;AA6CrD,SAAO,mCAAa,6BAAed,4BAAf,CAAb,EAA2DD,SAA3D,CAAP;AACD","sourcesContent":["import React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport invariant from '../utils/invariant';\nimport withNavigation from './withNavigation';\n\nexport default function withNavigationFocus(Component) {\n  class ComponentWithNavigationFocus extends React.Component {\n    static displayName = `withNavigationFocus(${Component.displayName ||\n      Component.name})`;\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        isFocused: props.navigation ? props.navigation.isFocused() : false,\n      };\n    }\n\n    componentDidMount() {\n      const { navigation } = this.props;\n      invariant(\n        !!navigation,\n        'withNavigationFocus can only be used on a view hierarchy of a navigator. The wrapped component is unable to get access to navigation from props or context.'\n      );\n\n      this.subscriptions = [\n        navigation.addListener('didFocus', () =>\n          this.setState({ isFocused: true })\n        ),\n        navigation.addListener('willBlur', () =>\n          this.setState({ isFocused: false })\n        ),\n      ];\n    }\n\n    componentWillUnmount() {\n      this.subscriptions.forEach(sub => sub.remove());\n    }\n\n    render() {\n      return (\n        <Component\n          {...this.props}\n          isFocused={this.state.isFocused}\n          ref={this.props.onRef}\n        />\n      );\n    }\n  }\n\n  return hoistStatics(withNavigation(ComponentWithNavigationFocus), Component);\n}\n"]},"metadata":{},"sourceType":"script"}