{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.ListItem = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _helpers = require(\"../helpers\");\n\nvar _config = require(\"../config\");\n\nvar _Avatar = _interopRequireDefault(require(\"../avatar/Avatar\"));\n\nvar _Badge = _interopRequireDefault(require(\"../badge/Badge\"));\n\nvar _CheckBox = _interopRequireDefault(require(\"../checkbox/CheckBox\"));\n\nvar _Icon = _interopRequireDefault(require(\"../icons/Icon\"));\n\nvar _Text = _interopRequireDefault(require(\"../text/Text\"));\n\nvar _ButtonGroup = _interopRequireDefault(require(\"../buttons/ButtonGroup\"));\n\nvar _Input = _interopRequireDefault(require(\"../input/Input\"));\n\nvar _jsxFileName = \"C:\\\\React\\\\magic\\\\node_modules\\\\react-native-elements\\\\src\\\\list\\\\ListItem.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar ANDROID_SECONDARY = 'rgba(0, 0, 0, 0.54)';\nvar chevronDefaultProps = {\n  type: _reactNative.Platform.OS === 'ios' ? 'ionicon' : 'material',\n  color: '#D1D1D6',\n  name: _reactNative.Platform.OS === 'ios' ? 'ios-arrow-forward' : 'keyboard-arrow-right',\n  size: 16\n};\n\nvar checkmarkDefaultProps = function checkmarkDefaultProps(theme) {\n  return {\n    name: 'check',\n    size: 20,\n    color: theme.colors.primary\n  };\n};\n\nvar renderText = function renderText(content, defaultProps, style) {\n  return (0, _helpers.renderNode)(_Text.default, content, _objectSpread({}, defaultProps, {\n    style: _reactNative.StyleSheet.flatten([style, defaultProps && defaultProps.style])\n  }));\n};\n\nvar renderAvatar = function renderAvatar(content) {\n  return (0, _helpers.renderNode)(_Avatar.default, content, {\n    size: 40,\n    rounded: true\n  });\n};\n\nvar renderIcon = function renderIcon(content) {\n  return (0, _helpers.renderNode)(_Icon.default, content, {\n    color: _reactNative.Platform.OS === 'ios' ? null : ANDROID_SECONDARY,\n    size: 24\n  });\n};\n\nvar ListItem = function ListItem(props) {\n  var title = props.title,\n      titleStyle = props.titleStyle,\n      titleProps = props.titleProps,\n      subtitle = props.subtitle,\n      subtitleStyle = props.subtitleStyle,\n      subtitleProps = props.subtitleProps,\n      containerStyle = props.containerStyle,\n      onPress = props.onPress,\n      onLongPress = props.onLongPress,\n      _props$Component = props.Component,\n      Component = _props$Component === void 0 ? onPress || onLongPress ? _reactNative.TouchableHighlight : _reactNative.View : _props$Component,\n      leftIcon = props.leftIcon,\n      leftAvatar = props.leftAvatar,\n      leftElement = props.leftElement,\n      rightIcon = props.rightIcon,\n      rightAvatar = props.rightAvatar,\n      rightElement = props.rightElement,\n      rightTitle = props.rightTitle,\n      rightTitleStyle = props.rightTitleStyle,\n      rightTitleProps = props.rightTitleProps,\n      rightSubtitle = props.rightSubtitle,\n      rightSubtitleStyle = props.rightSubtitleStyle,\n      rightSubtitleProps = props.rightSubtitleProps,\n      input = props.input,\n      buttonGroup = props.buttonGroup,\n      switchProps = props.switch,\n      checkBox = props.checkBox,\n      badge = props.badge,\n      chevron = props.chevron,\n      contentContainerStyle = props.contentContainerStyle,\n      rightContentContainerStyle = props.rightContentContainerStyle,\n      checkmark = props.checkmark,\n      disabled = props.disabled,\n      disabledStyle = props.disabledStyle,\n      bottomDivider = props.bottomDivider,\n      topDivider = props.topDivider,\n      pad = props.pad,\n      linearGradientProps = props.linearGradientProps,\n      _props$ViewComponent = props.ViewComponent,\n      ViewComponent = _props$ViewComponent === void 0 ? linearGradientProps && global.Expo ? global.Expo.LinearGradient : _reactNative.View : _props$ViewComponent,\n      theme = props.theme,\n      attributes = (0, _objectWithoutProperties2.default)(props, [\"title\", \"titleStyle\", \"titleProps\", \"subtitle\", \"subtitleStyle\", \"subtitleProps\", \"containerStyle\", \"onPress\", \"onLongPress\", \"Component\", \"leftIcon\", \"leftAvatar\", \"leftElement\", \"rightIcon\", \"rightAvatar\", \"rightElement\", \"rightTitle\", \"rightTitleStyle\", \"rightTitleProps\", \"rightSubtitle\", \"rightSubtitleStyle\", \"rightSubtitleProps\", \"input\", \"buttonGroup\", \"switch\", \"checkBox\", \"badge\", \"chevron\", \"contentContainerStyle\", \"rightContentContainerStyle\", \"checkmark\", \"disabled\", \"disabledStyle\", \"bottomDivider\", \"topDivider\", \"pad\", \"linearGradientProps\", \"ViewComponent\", \"theme\"]);\n  return _react.default.createElement(Component, (0, _extends2.default)({}, attributes, {\n    onPress: onPress,\n    onLongPress: onLongPress,\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    }\n  }), _react.default.createElement(PadView, (0, _extends2.default)({\n    Component: ViewComponent\n  }, linearGradientProps, {\n    style: _reactNative.StyleSheet.flatten([styles.container(theme), (buttonGroup || switchProps) && {\n      paddingVertical: 8\n    }, topDivider && {\n      borderTopWidth: _reactNative.StyleSheet.hairlineWidth\n    }, bottomDivider && {\n      borderBottomWidth: _reactNative.StyleSheet.hairlineWidth\n    }, containerStyle, disabled && disabledStyle]),\n    pad: pad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    }\n  }), (0, _helpers.renderNode)(_Text.default, leftElement), renderIcon(leftIcon), renderAvatar(leftAvatar), (typeof title !== 'undefined' || subtitle) && _react.default.createElement(_reactNative.View, {\n    style: _reactNative.StyleSheet.flatten([styles.contentContainer, contentContainerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    }\n  }, renderText(title, _objectSpread({\n    testID: 'listItemTitle'\n  }, titleProps), _reactNative.StyleSheet.flatten([styles.title, titleStyle])), renderText(subtitle, subtitleProps, _reactNative.StyleSheet.flatten([styles.subtitle, subtitleStyle]))), (!!rightTitle || !!rightSubtitle) && _react.default.createElement(_reactNative.View, {\n    style: _reactNative.StyleSheet.flatten([styles.rightContentContainer, rightContentContainerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    }\n  }, renderText(rightTitle, rightTitleProps, _reactNative.StyleSheet.flatten([styles.title, styles.rightTitle, rightTitleStyle])), renderText(rightSubtitle, rightSubtitleProps, _reactNative.StyleSheet.flatten([styles.subtitle, styles.rightSubtitle, rightSubtitleStyle]))), input && _react.default.createElement(_Input.default, (0, _extends2.default)({}, input, {\n    inputStyle: _reactNative.StyleSheet.flatten([styles.input, input && input.inputStyle]),\n    inputContainerStyle: _reactNative.StyleSheet.flatten([styles.inputContentContainer, input && input.inputContainerStyle]),\n    containerStyle: _reactNative.StyleSheet.flatten([styles.inputContainer, input && input.containerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    }\n  })), switchProps && _react.default.createElement(_reactNative.Switch, (0, _extends2.default)({}, switchProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    }\n  })), checkBox && _react.default.createElement(_CheckBox.default, (0, _extends2.default)({}, checkBox, {\n    containerStyle: _reactNative.StyleSheet.flatten([styles.checkboxContainer, checkBox && checkBox.containerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    }\n  })), badge && _react.default.createElement(_Badge.default, (0, _extends2.default)({}, badge, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    }\n  })), buttonGroup && _react.default.createElement(_ButtonGroup.default, (0, _extends2.default)({}, buttonGroup, {\n    containerStyle: _reactNative.StyleSheet.flatten([styles.buttonGroupContainer, buttonGroup && buttonGroup.containerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    }\n  })), renderAvatar(rightAvatar), renderIcon(rightIcon), (0, _helpers.renderNode)(_Text.default, rightElement), (0, _helpers.renderNode)(_Icon.default, checkmark, checkmarkDefaultProps(theme)), (0, _helpers.renderNode)(_Icon.default, chevron, chevronDefaultProps)));\n};\n\nexports.ListItem = ListItem;\nvar styles = {\n  container: function container(theme) {\n    return _objectSpread({}, _reactNative.Platform.select({\n      ios: {\n        padding: 14\n      },\n      default: {\n        padding: 16\n      }\n    }), {\n      flexDirection: 'row',\n      alignItems: 'center',\n      backgroundColor: 'white',\n      borderColor: theme.colors.divider\n    });\n  },\n  title: _objectSpread({\n    backgroundColor: 'transparent'\n  }, _reactNative.Platform.select({\n    ios: {\n      fontSize: 17\n    },\n    default: {\n      fontSize: 16\n    }\n  })),\n  subtitle: _objectSpread({\n    backgroundColor: 'transparent'\n  }, _reactNative.Platform.select({\n    ios: {\n      fontSize: 15\n    },\n    default: {\n      color: ANDROID_SECONDARY,\n      fontSize: 14\n    }\n  })),\n  contentContainer: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  rightContentContainer: {\n    flex: 0.5,\n    justifyContent: 'center',\n    alignItems: 'flex-end'\n  },\n  inputContainer: {\n    flex: 1,\n    paddingRight: 0\n  },\n  inputContentContainer: {\n    flex: 1,\n    borderBottomWidth: 0,\n    width: null,\n    height: null\n  },\n  input: {\n    flex: 1,\n    textAlign: 'right',\n    width: null,\n    height: null\n  },\n  checkboxContainer: {\n    margin: 0,\n    marginRight: 0,\n    marginLeft: 0,\n    padding: 0\n  },\n  buttonGroupContainer: {\n    flex: 1,\n    marginLeft: 0,\n    marginRight: 0,\n    marginTop: 0,\n    marginBottom: 0\n  },\n  rightTitle: {\n    color: ANDROID_SECONDARY\n  },\n  rightSubtitle: {\n    color: ANDROID_SECONDARY\n  }\n};\nListItem.propTypes = {\n  containerStyle: _config.ViewPropTypes.style,\n  contentContainerStyle: _config.ViewPropTypes.style,\n  rightContentContainerStyle: _config.ViewPropTypes.style,\n  Component: _propTypes.default.elementType,\n  onPress: _propTypes.default.func,\n  onLongPress: _propTypes.default.func,\n  title: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),\n  titleStyle: _config.TextPropTypes.style,\n  titleProps: _propTypes.default.object,\n  subtitle: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),\n  subtitleStyle: _config.TextPropTypes.style,\n  subtitleProps: _propTypes.default.object,\n  leftIcon: _helpers.nodeType,\n  leftAvatar: _helpers.nodeType,\n  leftElement: _helpers.nodeType,\n  rightIcon: _helpers.nodeType,\n  rightAvatar: _helpers.nodeType,\n  rightElement: _helpers.nodeType,\n  rightTitle: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),\n  rightTitleStyle: _config.TextPropTypes.style,\n  rightTitleProps: _propTypes.default.object,\n  rightSubtitle: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),\n  rightSubtitleStyle: _config.TextPropTypes.style,\n  rightSubtitleProps: _propTypes.default.object,\n  input: _propTypes.default.object,\n  buttonGroup: _propTypes.default.object,\n  switch: _propTypes.default.object,\n  checkBox: _propTypes.default.object,\n  badge: _propTypes.default.object,\n  chevron: _helpers.nodeType,\n  checkmark: _helpers.nodeType,\n  disabled: _propTypes.default.bool,\n  disabledStyle: _config.ViewPropTypes.style,\n  topDivider: _propTypes.default.bool,\n  bottomDivider: _propTypes.default.bool,\n  pad: _propTypes.default.number,\n  linearGradientProps: _propTypes.default.object,\n  ViewComponent: _propTypes.default.elementType,\n  theme: _propTypes.default.object\n};\nListItem.defaultProps = {\n  pad: 16,\n  title: ''\n};\n\nvar PadView = function (_React$Component) {\n  (0, _inherits2.default)(PadView, _React$Component);\n\n  function PadView(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, PadView);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PadView).call(this, props));\n\n    _this.setNativeProps = function (nativeProps) {\n      _this._root.current.setNativeProps(nativeProps);\n    };\n\n    _this._root = _react.default.createRef();\n    return _this;\n  }\n\n  (0, _createClass2.default)(PadView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          pad = _this$props.pad,\n          Component = _this$props.Component,\n          props = (0, _objectWithoutProperties2.default)(_this$props, [\"children\", \"pad\", \"Component\"]);\n\n      var childrens = _react.default.Children.toArray(children);\n\n      var length = childrens.length;\n      var Container = Component || _reactNative.View;\n      return _react.default.createElement(Container, (0, _extends2.default)({}, props, {\n        ref: this._root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        }\n      }), _react.default.Children.map(childrens, function (child, index) {\n        return child && [child, index !== length - 1 && _react.default.createElement(_reactNative.View, {\n          width: pad,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371\n          }\n        })];\n      }));\n    }\n  }]);\n  return PadView;\n}(_react.default.Component);\n\nPadView.propTypes = {\n  children: _propTypes.default.node,\n  pad: _propTypes.default.number,\n  Component: _propTypes.default.elementType\n};\n\nvar _default = (0, _config.withTheme)(ListItem, 'ListItem');\n\nexports.default = _default;","map":{"version":3,"sources":["C:/React/magic/node_modules/react-native-elements/src/list/ListItem.js"],"names":["ANDROID_SECONDARY","chevronDefaultProps","type","Platform","OS","color","name","size","checkmarkDefaultProps","theme","colors","primary","renderText","content","defaultProps","style","Text","StyleSheet","flatten","renderAvatar","Avatar","rounded","renderIcon","Icon","ListItem","props","title","titleStyle","titleProps","subtitle","subtitleStyle","subtitleProps","containerStyle","onPress","onLongPress","Component","TouchableHighlight","View","leftIcon","leftAvatar","leftElement","rightIcon","rightAvatar","rightElement","rightTitle","rightTitleStyle","rightTitleProps","rightSubtitle","rightSubtitleStyle","rightSubtitleProps","input","buttonGroup","switchProps","switch","checkBox","badge","chevron","contentContainerStyle","rightContentContainerStyle","checkmark","disabled","disabledStyle","bottomDivider","topDivider","pad","linearGradientProps","ViewComponent","global","Expo","LinearGradient","attributes","styles","container","paddingVertical","borderTopWidth","hairlineWidth","borderBottomWidth","contentContainer","testID","rightContentContainer","inputStyle","inputContentContainer","inputContainerStyle","inputContainer","checkboxContainer","buttonGroupContainer","select","ios","padding","default","flexDirection","alignItems","backgroundColor","borderColor","divider","fontSize","flex","justifyContent","paddingRight","width","height","textAlign","margin","marginRight","marginLeft","marginTop","marginBottom","propTypes","ViewPropTypes","PropTypes","elementType","func","oneOfType","string","element","TextPropTypes","object","nodeType","bool","number","PadView","setNativeProps","nativeProps","_root","current","React","createRef","children","childrens","Children","toArray","length","Container","map","child","index","node"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Platform,\n  StyleSheet,\n  Switch,\n  TouchableHighlight,\n  View,\n} from 'react-native';\n\nimport { renderNode, nodeType } from '../helpers';\nimport { ViewPropTypes, TextPropTypes, withTheme } from '../config';\n\nimport Avatar from '../avatar/Avatar';\nimport Badge from '../badge/Badge';\nimport CheckBox from '../checkbox/CheckBox';\nimport Icon from '../icons/Icon';\nimport Text from '../text/Text';\nimport ButtonGroup from '../buttons/ButtonGroup';\nimport Input from '../input/Input';\n\nconst ANDROID_SECONDARY = 'rgba(0, 0, 0, 0.54)';\n\nconst chevronDefaultProps = {\n  type: Platform.OS === 'ios' ? 'ionicon' : 'material',\n  color: '#D1D1D6',\n  name: Platform.OS === 'ios' ? 'ios-arrow-forward' : 'keyboard-arrow-right',\n  size: 16,\n};\n\nconst checkmarkDefaultProps = theme => ({\n  name: 'check',\n  size: 20,\n  color: theme.colors.primary,\n});\n\nconst renderText = (content, defaultProps, style) =>\n  renderNode(Text, content, {\n    ...defaultProps,\n    style: StyleSheet.flatten([style, defaultProps && defaultProps.style]),\n  });\n\nconst renderAvatar = content =>\n  renderNode(Avatar, content, {\n    size: 40,\n    rounded: true,\n  });\n\nconst renderIcon = content =>\n  renderNode(Icon, content, {\n    color: Platform.OS === 'ios' ? null : ANDROID_SECONDARY,\n    size: 24,\n  });\n\nconst ListItem = props => {\n  const {\n    title,\n    titleStyle,\n    titleProps,\n    subtitle,\n    subtitleStyle,\n    subtitleProps,\n    containerStyle,\n    onPress,\n    onLongPress,\n    Component = onPress || onLongPress ? TouchableHighlight : View,\n    leftIcon,\n    leftAvatar,\n    leftElement,\n    rightIcon,\n    rightAvatar,\n    rightElement,\n    rightTitle,\n    rightTitleStyle,\n    rightTitleProps,\n    rightSubtitle,\n    rightSubtitleStyle,\n    rightSubtitleProps,\n    input,\n    buttonGroup,\n    switch: switchProps, // switch is a reserved keyword\n    checkBox,\n    badge,\n    chevron,\n    contentContainerStyle,\n    rightContentContainerStyle,\n    checkmark,\n    disabled,\n    disabledStyle,\n    bottomDivider,\n    topDivider,\n    pad,\n    linearGradientProps,\n    ViewComponent = linearGradientProps && global.Expo\n      ? global.Expo.LinearGradient\n      : View,\n    theme,\n    ...attributes\n  } = props;\n  return (\n    <Component\n      {...attributes}\n      onPress={onPress}\n      onLongPress={onLongPress}\n      disabled={disabled}\n    >\n      <PadView\n        Component={ViewComponent}\n        {...linearGradientProps}\n        style={StyleSheet.flatten([\n          styles.container(theme),\n          (buttonGroup || switchProps) && { paddingVertical: 8 },\n          topDivider && { borderTopWidth: StyleSheet.hairlineWidth },\n          bottomDivider && { borderBottomWidth: StyleSheet.hairlineWidth },\n          containerStyle,\n          disabled && disabledStyle,\n        ])}\n        pad={pad}\n      >\n        {renderNode(Text, leftElement)}\n        {renderIcon(leftIcon)}\n        {renderAvatar(leftAvatar)}\n\n        {(typeof title !== 'undefined' || subtitle) && (\n          <View\n            style={StyleSheet.flatten([\n              styles.contentContainer,\n              contentContainerStyle,\n            ])}\n          >\n            {renderText(\n              title,\n              { testID: 'listItemTitle', ...titleProps },\n              StyleSheet.flatten([styles.title, titleStyle])\n            )}\n            {renderText(\n              subtitle,\n              subtitleProps,\n              StyleSheet.flatten([styles.subtitle, subtitleStyle])\n            )}\n          </View>\n        )}\n\n        {(!!rightTitle || !!rightSubtitle) && (\n          <View\n            style={StyleSheet.flatten([\n              styles.rightContentContainer,\n              rightContentContainerStyle,\n            ])}\n          >\n            {renderText(\n              rightTitle,\n              rightTitleProps,\n              StyleSheet.flatten([\n                styles.title,\n                styles.rightTitle,\n                rightTitleStyle,\n              ])\n            )}\n\n            {renderText(\n              rightSubtitle,\n              rightSubtitleProps,\n              StyleSheet.flatten([\n                styles.subtitle,\n                styles.rightSubtitle,\n                rightSubtitleStyle,\n              ])\n            )}\n          </View>\n        )}\n\n        {input && (\n          <Input\n            {...input}\n            inputStyle={StyleSheet.flatten([\n              styles.input,\n              input && input.inputStyle,\n            ])}\n            inputContainerStyle={StyleSheet.flatten([\n              styles.inputContentContainer,\n              input && input.inputContainerStyle,\n            ])}\n            containerStyle={StyleSheet.flatten([\n              styles.inputContainer,\n              input && input.containerStyle,\n            ])}\n          />\n        )}\n        {switchProps && <Switch {...switchProps} />}\n        {checkBox && (\n          <CheckBox\n            {...checkBox}\n            containerStyle={StyleSheet.flatten([\n              styles.checkboxContainer,\n              checkBox && checkBox.containerStyle,\n            ])}\n          />\n        )}\n        {badge && <Badge {...badge} />}\n        {buttonGroup && (\n          <ButtonGroup\n            {...buttonGroup}\n            containerStyle={StyleSheet.flatten([\n              styles.buttonGroupContainer,\n              buttonGroup && buttonGroup.containerStyle,\n            ])}\n          />\n        )}\n        {renderAvatar(rightAvatar)}\n        {renderIcon(rightIcon)}\n        {renderNode(Text, rightElement)}\n        {renderNode(Icon, checkmark, checkmarkDefaultProps(theme))}\n        {renderNode(Icon, chevron, chevronDefaultProps)}\n      </PadView>\n    </Component>\n  );\n};\n\nconst styles = {\n  container: theme => ({\n    ...Platform.select({\n      ios: {\n        padding: 14,\n      },\n      default: {\n        padding: 16,\n      },\n    }),\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderColor: theme.colors.divider,\n  }),\n  title: {\n    backgroundColor: 'transparent',\n    ...Platform.select({\n      ios: {\n        fontSize: 17,\n      },\n      default: {\n        fontSize: 16,\n      },\n    }),\n  },\n  subtitle: {\n    backgroundColor: 'transparent',\n    ...Platform.select({\n      ios: {\n        fontSize: 15,\n      },\n      default: {\n        color: ANDROID_SECONDARY,\n        fontSize: 14,\n      },\n    }),\n  },\n  contentContainer: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  rightContentContainer: {\n    flex: 0.5,\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n  inputContainer: {\n    flex: 1,\n    paddingRight: 0,\n  },\n  inputContentContainer: {\n    flex: 1,\n    borderBottomWidth: 0,\n    width: null,\n    height: null,\n  },\n  input: {\n    flex: 1,\n    textAlign: 'right',\n    width: null,\n    height: null,\n  },\n  checkboxContainer: {\n    margin: 0,\n    marginRight: 0,\n    marginLeft: 0,\n    padding: 0,\n  },\n  buttonGroupContainer: {\n    flex: 1,\n    marginLeft: 0,\n    marginRight: 0,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n  rightTitle: {\n    color: ANDROID_SECONDARY,\n  },\n  rightSubtitle: {\n    color: ANDROID_SECONDARY,\n  },\n};\n\nListItem.propTypes = {\n  containerStyle: ViewPropTypes.style,\n  contentContainerStyle: ViewPropTypes.style,\n  rightContentContainerStyle: ViewPropTypes.style,\n  Component: PropTypes.elementType,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  titleStyle: TextPropTypes.style,\n  titleProps: PropTypes.object,\n  subtitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  subtitleStyle: TextPropTypes.style,\n  subtitleProps: PropTypes.object,\n  leftIcon: nodeType,\n  leftAvatar: nodeType,\n  leftElement: nodeType,\n  rightIcon: nodeType,\n  rightAvatar: nodeType,\n  rightElement: nodeType,\n  rightTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  rightTitleStyle: TextPropTypes.style,\n  rightTitleProps: PropTypes.object,\n  rightSubtitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  rightSubtitleStyle: TextPropTypes.style,\n  rightSubtitleProps: PropTypes.object,\n  input: PropTypes.object,\n  buttonGroup: PropTypes.object,\n  switch: PropTypes.object,\n  checkBox: PropTypes.object,\n  badge: PropTypes.object,\n  chevron: nodeType,\n  checkmark: nodeType,\n  disabled: PropTypes.bool,\n  disabledStyle: ViewPropTypes.style,\n  topDivider: PropTypes.bool,\n  bottomDivider: PropTypes.bool,\n  pad: PropTypes.number,\n  linearGradientProps: PropTypes.object,\n  ViewComponent: PropTypes.elementType,\n  theme: PropTypes.object,\n};\n\nListItem.defaultProps = {\n  pad: 16,\n  title: '',\n};\n\nclass PadView extends React.Component {\n  constructor(props) {\n    super(props);\n    this._root = React.createRef();\n  }\n\n  setNativeProps = nativeProps => {\n    this._root.current.setNativeProps(nativeProps);\n  };\n\n  render() {\n    const { children, pad, Component, ...props } = this.props;\n    const childrens = React.Children.toArray(children);\n    const { length } = childrens;\n    const Container = Component || View;\n    return (\n      <Container {...props} ref={this._root}>\n        {React.Children.map(\n          childrens,\n          (child, index) =>\n            child && [child, index !== length - 1 && <View width={pad} />]\n        )}\n      </Container>\n    );\n  }\n}\n\nPadView.propTypes = {\n  children: PropTypes.node,\n  pad: PropTypes.number,\n  Component: PropTypes.elementType,\n};\n\nexport { ListItem };\nexport default withTheme(ListItem, 'ListItem');\n"]},"metadata":{},"sourceType":"script"}