{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _config = require(\"../config\");\n\nvar _helpers = require(\"../helpers\");\n\nvar _Input = _interopRequireDefault(require(\"../input/Input\"));\n\nvar _Icon = _interopRequireDefault(require(\"../icons/Icon\"));\n\nvar _jsxFileName = \"C:\\\\React\\\\magic\\\\node_modules\\\\react-native-elements\\\\src\\\\searchbar\\\\SearchBar-default.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar defaultSearchIcon = function defaultSearchIcon(theme) {\n  return {\n    type: 'material',\n    size: 18,\n    name: 'search',\n    color: theme.colors.grey3\n  };\n};\n\nvar defaultClearIcon = function defaultClearIcon(theme) {\n  return {\n    type: 'material',\n    size: 18,\n    name: 'clear',\n    color: theme.colors.grey3\n  };\n};\n\nvar SearchBar = function (_React$Component) {\n  (0, _inherits2.default)(SearchBar, _React$Component);\n\n  function SearchBar(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, SearchBar);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SearchBar).call(this, props));\n\n    _this.focus = function () {\n      _this.input.focus();\n    };\n\n    _this.blur = function () {\n      _this.input.blur();\n    };\n\n    _this.clear = function () {\n      _this.input.clear();\n\n      _this.onChangeText('');\n\n      _this.props.onClear();\n    };\n\n    _this.onFocus = function () {\n      _this.props.onFocus();\n\n      _this.setState({\n        isEmpty: _this.props.value === ''\n      });\n    };\n\n    _this.onBlur = function () {\n      _this.props.onBlur();\n    };\n\n    _this.onChangeText = function (text) {\n      _this.props.onChangeText(text);\n\n      _this.setState({\n        isEmpty: text === ''\n      });\n    };\n\n    var value = props.value;\n    _this.state = {\n      isEmpty: value ? value === '' : true\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(SearchBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"theme\"]);\n      var lightTheme = rest.lightTheme,\n          round = rest.round,\n          _rest$clearIcon = rest.clearIcon,\n          clearIcon = _rest$clearIcon === void 0 ? defaultClearIcon(theme) : _rest$clearIcon,\n          containerStyle = rest.containerStyle,\n          _rest$searchIcon = rest.searchIcon,\n          searchIcon = _rest$searchIcon === void 0 ? defaultSearchIcon(theme) : _rest$searchIcon,\n          leftIconContainerStyle = rest.leftIconContainerStyle,\n          rightIconContainerStyle = rest.rightIconContainerStyle,\n          inputContainerStyle = rest.inputContainerStyle,\n          inputStyle = rest.inputStyle,\n          showLoading = rest.showLoading,\n          loadingProps = rest.loadingProps,\n          _rest$placeholderText = rest.placeholderTextColor,\n          placeholderTextColor = _rest$placeholderText === void 0 ? theme.colors.grey3 : _rest$placeholderText,\n          attributes = (0, _objectWithoutProperties2.default)(rest, [\"lightTheme\", \"round\", \"clearIcon\", \"containerStyle\", \"searchIcon\", \"leftIconContainerStyle\", \"rightIconContainerStyle\", \"inputContainerStyle\", \"inputStyle\", \"showLoading\", \"loadingProps\", \"placeholderTextColor\"]);\n      var isEmpty = this.state.isEmpty;\n      var loadingStyle = loadingProps.style,\n          otherLoadingProps = (0, _objectWithoutProperties2.default)(loadingProps, [\"style\"]);\n      return _react.default.createElement(_reactNative.View, {\n        style: _reactNative.StyleSheet.flatten([styles.container(theme), lightTheme && styles.containerLight(theme), containerStyle]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        }\n      }, _react.default.createElement(_Input.default, (0, _extends2.default)({\n        testID: \"searchInput\"\n      }, attributes, {\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onChangeText: this.onChangeText,\n        ref: function ref(input) {\n          _this2.input = input;\n        },\n        placeholderTextColor: placeholderTextColor,\n        inputStyle: _reactNative.StyleSheet.flatten([styles.inputStyle(theme), inputStyle]),\n        inputContainerStyle: _reactNative.StyleSheet.flatten([styles.inputContentContainer(theme), lightTheme && styles.inputContentContainerLight(theme), round && styles.round, inputContainerStyle]),\n        containerStyle: styles.inputContainer,\n        leftIcon: (0, _helpers.renderNode)(_Icon.default, searchIcon, defaultSearchIcon(theme)),\n        leftIconContainerStyle: _reactNative.StyleSheet.flatten([styles.leftIconContainerStyle, leftIconContainerStyle]),\n        rightIcon: _react.default.createElement(_reactNative.View, {\n          style: {\n            flexDirection: 'row'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          }\n        }, showLoading && _react.default.createElement(_reactNative.ActivityIndicator, (0, _extends2.default)({\n          key: \"loading\",\n          style: _reactNative.StyleSheet.flatten([{\n            marginRight: 5\n          }, loadingStyle])\n        }, otherLoadingProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          }\n        })), !isEmpty && (0, _helpers.renderNode)(_Icon.default, clearIcon, _objectSpread({}, defaultClearIcon(theme), {\n          key: 'cancel',\n          onPress: this.clear\n        }))),\n        rightIconContainerStyle: _reactNative.StyleSheet.flatten([styles.rightIconContainerStyle, rightIconContainerStyle]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }\n      })));\n    }\n  }]);\n  return SearchBar;\n}(_react.default.Component);\n\nSearchBar.propTypes = {\n  value: _propTypes.default.string,\n  clearIcon: _helpers.nodeType,\n  searchIcon: _helpers.nodeType,\n  loadingProps: _propTypes.default.object,\n  showLoading: _propTypes.default.bool,\n  containerStyle: _config.ViewPropTypes.style,\n  leftIconContainerStyle: _config.ViewPropTypes.style,\n  rightIconContainerStyle: _config.ViewPropTypes.style,\n  inputContainerStyle: _config.ViewPropTypes.style,\n  inputStyle: _reactNative.Text.propTypes.style,\n  onClear: _propTypes.default.func,\n  onFocus: _propTypes.default.func,\n  onBlur: _propTypes.default.func,\n  onChangeText: _propTypes.default.func,\n  placeholderTextColor: _propTypes.default.string,\n  lightTheme: _propTypes.default.bool,\n  round: _propTypes.default.bool,\n  theme: _propTypes.default.object\n};\nSearchBar.defaultProps = {\n  value: '',\n  loadingProps: {},\n  showLoading: false,\n  lightTheme: false,\n  round: false,\n  onClear: function onClear() {\n    return null;\n  },\n  onFocus: function onFocus() {\n    return null;\n  },\n  onBlur: function onBlur() {\n    return null;\n  },\n  onChangeText: function onChangeText() {\n    return null;\n  }\n};\nvar styles = {\n  container: function container(theme) {\n    return {\n      borderTopWidth: 1,\n      borderBottomWidth: 1,\n      borderBottomColor: '#000',\n      borderTopColor: '#000',\n      padding: 8,\n      backgroundColor: theme.colors.grey0\n    };\n  },\n  rightIconContainerStyle: {\n    marginRight: 8\n  },\n  leftIconContainerStyle: {\n    marginLeft: 8\n  },\n  containerLight: function containerLight(theme) {\n    return {\n      borderTopColor: '#e1e1e1',\n      borderBottomColor: '#e1e1e1',\n      backgroundColor: theme.colors.grey5\n    };\n  },\n  inputContainer: {\n    paddingHorizontal: 0\n  },\n  inputStyle: function inputStyle(theme) {\n    return {\n      color: theme.colors.grey3,\n      marginLeft: 10\n    };\n  },\n  inputContentContainer: function inputContentContainer(theme) {\n    return {\n      borderBottomWidth: 0,\n      borderRadius: 3,\n      overflow: 'hidden',\n      minHeight: 30,\n      backgroundColor: theme.colors.searchBg\n    };\n  },\n  inputContentContainerLight: function inputContentContainerLight(theme) {\n    return {\n      backgroundColor: theme.colors.grey4\n    };\n  },\n  round: {\n    borderRadius: 15\n  }\n};\nvar _default = SearchBar;\nexports.default = _default;","map":{"version":3,"sources":["C:/React/magic/node_modules/react-native-elements/src/searchbar/SearchBar-default.js"],"names":["defaultSearchIcon","theme","type","size","name","color","colors","grey3","defaultClearIcon","SearchBar","props","focus","input","blur","clear","onChangeText","onClear","onFocus","setState","isEmpty","value","onBlur","text","state","rest","lightTheme","round","clearIcon","containerStyle","searchIcon","leftIconContainerStyle","rightIconContainerStyle","inputContainerStyle","inputStyle","showLoading","loadingProps","placeholderTextColor","attributes","loadingStyle","style","otherLoadingProps","StyleSheet","flatten","styles","container","containerLight","inputContentContainer","inputContentContainerLight","inputContainer","Icon","flexDirection","marginRight","key","onPress","React","Component","propTypes","PropTypes","string","nodeType","object","bool","ViewPropTypes","Text","func","defaultProps","borderTopWidth","borderBottomWidth","borderBottomColor","borderTopColor","padding","backgroundColor","grey0","marginLeft","grey5","paddingHorizontal","borderRadius","overflow","minHeight","searchBg","grey4"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ActivityIndicator, View, Text, StyleSheet } from 'react-native';\n\nimport { ViewPropTypes } from '../config';\nimport { renderNode, nodeType } from '../helpers';\n\nimport Input from '../input/Input';\nimport Icon from '../icons/Icon';\n\nconst defaultSearchIcon = theme => ({\n  type: 'material',\n  size: 18,\n  name: 'search',\n  color: theme.colors.grey3,\n});\n\nconst defaultClearIcon = theme => ({\n  type: 'material',\n  size: 18,\n  name: 'clear',\n  color: theme.colors.grey3,\n});\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    const { value } = props;\n    this.state = {\n      isEmpty: value ? value === '' : true,\n    };\n  }\n\n  focus = () => {\n    this.input.focus();\n  };\n\n  blur = () => {\n    this.input.blur();\n  };\n\n  clear = () => {\n    this.input.clear();\n    this.onChangeText('');\n    this.props.onClear();\n  };\n\n  onFocus = () => {\n    this.props.onFocus();\n    this.setState({ isEmpty: this.props.value === '' });\n  };\n\n  onBlur = () => {\n    this.props.onBlur();\n  };\n\n  onChangeText = text => {\n    this.props.onChangeText(text);\n    this.setState({ isEmpty: text === '' });\n  };\n\n  render() {\n    const { theme, ...rest } = this.props;\n\n    const {\n      lightTheme,\n      round,\n      clearIcon = defaultClearIcon(theme),\n      containerStyle,\n      searchIcon = defaultSearchIcon(theme),\n      leftIconContainerStyle,\n      rightIconContainerStyle,\n      inputContainerStyle,\n      inputStyle,\n      showLoading,\n      loadingProps,\n      placeholderTextColor = theme.colors.grey3,\n      ...attributes\n    } = rest;\n\n    const { isEmpty } = this.state;\n    const { style: loadingStyle, ...otherLoadingProps } = loadingProps;\n\n    return (\n      <View\n        style={StyleSheet.flatten([\n          styles.container(theme),\n          lightTheme && styles.containerLight(theme),\n          containerStyle,\n        ])}\n      >\n        <Input\n          testID=\"searchInput\"\n          {...attributes}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onChangeText={this.onChangeText}\n          ref={input => {\n            this.input = input;\n          }}\n          placeholderTextColor={placeholderTextColor}\n          inputStyle={StyleSheet.flatten([\n            styles.inputStyle(theme),\n            inputStyle,\n          ])}\n          inputContainerStyle={StyleSheet.flatten([\n            styles.inputContentContainer(theme),\n            lightTheme && styles.inputContentContainerLight(theme),\n            round && styles.round,\n            inputContainerStyle,\n          ])}\n          containerStyle={styles.inputContainer}\n          leftIcon={renderNode(Icon, searchIcon, defaultSearchIcon(theme))}\n          leftIconContainerStyle={StyleSheet.flatten([\n            styles.leftIconContainerStyle,\n            leftIconContainerStyle,\n          ])}\n          rightIcon={\n            <View style={{ flexDirection: 'row' }}>\n              {showLoading && (\n                <ActivityIndicator\n                  key=\"loading\"\n                  style={StyleSheet.flatten([{ marginRight: 5 }, loadingStyle])}\n                  {...otherLoadingProps}\n                />\n              )}\n\n              {!isEmpty &&\n                renderNode(Icon, clearIcon, {\n                  ...defaultClearIcon(theme),\n                  key: 'cancel',\n                  onPress: this.clear,\n                })}\n            </View>\n          }\n          rightIconContainerStyle={StyleSheet.flatten([\n            styles.rightIconContainerStyle,\n            rightIconContainerStyle,\n          ])}\n        />\n      </View>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  value: PropTypes.string,\n  clearIcon: nodeType,\n  searchIcon: nodeType,\n  loadingProps: PropTypes.object,\n  showLoading: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  leftIconContainerStyle: ViewPropTypes.style,\n  rightIconContainerStyle: ViewPropTypes.style,\n  inputContainerStyle: ViewPropTypes.style,\n  inputStyle: Text.propTypes.style,\n  onClear: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChangeText: PropTypes.func,\n  placeholderTextColor: PropTypes.string,\n  lightTheme: PropTypes.bool,\n  round: PropTypes.bool,\n  theme: PropTypes.object,\n};\n\nSearchBar.defaultProps = {\n  value: '',\n  loadingProps: {},\n  showLoading: false,\n  lightTheme: false,\n  round: false,\n  onClear: () => null,\n  onFocus: () => null,\n  onBlur: () => null,\n  onChangeText: () => null,\n};\n\nconst styles = {\n  container: theme => ({\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderBottomColor: '#000',\n    borderTopColor: '#000',\n    padding: 8,\n    backgroundColor: theme.colors.grey0,\n  }),\n  rightIconContainerStyle: {\n    marginRight: 8,\n  },\n  leftIconContainerStyle: {\n    marginLeft: 8,\n  },\n  containerLight: theme => ({\n    borderTopColor: '#e1e1e1',\n    borderBottomColor: '#e1e1e1',\n    backgroundColor: theme.colors.grey5,\n  }),\n  inputContainer: {\n    paddingHorizontal: 0,\n  },\n  inputStyle: theme => ({\n    color: theme.colors.grey3,\n    marginLeft: 10,\n  }),\n  inputContentContainer: theme => ({\n    borderBottomWidth: 0,\n    borderRadius: 3,\n    overflow: 'hidden',\n    minHeight: 30,\n    backgroundColor: theme.colors.searchBg,\n  }),\n  inputContentContainerLight: theme => ({\n    backgroundColor: theme.colors.grey4,\n  }),\n  round: {\n    borderRadius: 15,\n  },\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"script"}