{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Main;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeTabView = require(\"react-native-tab-view\");\n\nvar _Search = _interopRequireDefault(require(\"../pages/Search\"));\n\nvar _MyDeck = _interopRequireDefault(require(\"../pages/MyDeck\"));\n\nvar _jsxFileName = \"C:\\\\React\\\\magic\\\\src\\\\pages\\\\Main.js\";\n\nvar SearchScreen = function SearchScreen() {\n  return _react.default.createElement(_Search.default, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    }\n  });\n};\n\nvar MyDeckScreen = function MyDeckScreen() {\n  return _react.default.createElement(_MyDeck.default, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    }\n  });\n};\n\nvar initialLayout = {\n  width: _reactNative.Dimensions.get('window').width\n};\n\nfunction Main() {\n  var _React$useState = _react.default.useState(0),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      index = _React$useState2[0],\n      setIndex = _React$useState2[1];\n\n  var _React$useState3 = _react.default.useState([{\n    key: 'first',\n    title: 'Search'\n  }, {\n    key: 'second',\n    title: 'My Deck'\n  }]),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 1),\n      routes = _React$useState4[0];\n\n  var renderScene = (0, _reactNativeTabView.SceneMap)({\n    first: SearchScreen,\n    second: MyDeckScreen\n  });\n  return _react.default.createElement(_reactNativeTabView.TabView, {\n    navigationState: {\n      index: index,\n      routes: routes\n    },\n    renderScene: renderScene,\n    onIndexChange: setIndex,\n    initialLayout: initialLayout,\n    style: {\n      backgroundColor: '#333333'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    }\n  });\n}","map":{"version":3,"sources":["C:/React/magic/src/pages/Main.js"],"names":["SearchScreen","MyDeckScreen","initialLayout","width","Dimensions","get","Main","React","useState","index","setIndex","key","title","routes","renderScene","first","second","backgroundColor"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AAEA;;AACA;;;;AAGA,IAAMA,YAAY,GAAG,SAAfA,YAAe;AAAA,SACpB,6BAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA,IADoB;AAAA,CAArB;;AAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SACnB,6BAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA,IADmB;AAAA,CAArB;;AAIA,IAAMC,aAAa,GAAG;AAAEC,EAAAA,KAAK,EAAEC,wBAAWC,GAAX,CAAe,QAAf,EAAyBF;AAAlC,CAAtB;;AAEe,SAASG,IAAT,GAAgB;AAAA,wBACHC,eAAMC,QAAN,CAAe,CAAf,CADG;AAAA;AAAA,MACtBC,KADsB;AAAA,MACfC,QADe;;AAAA,yBAEZH,eAAMC,QAAN,CAAe,CAC9B;AAAEG,IAAAA,GAAG,EAAE,OAAP;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAD8B,EAE9B;AAAED,IAAAA,GAAG,EAAE,QAAP;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAF8B,CAAf,CAFY;AAAA;AAAA,MAEtBC,MAFsB;;AAO7B,MAAMC,WAAW,GAAG,kCAAS;AAC3BC,IAAAA,KAAK,EAAEf,YADoB;AAE3BgB,IAAAA,MAAM,EAAEf;AAFmB,GAAT,CAApB;AAKA,SACE,6BAAC,2BAAD;AACE,IAAA,eAAe,EAAE;AAAEQ,MAAAA,KAAK,EAALA,KAAF;AAASI,MAAAA,MAAM,EAANA;AAAT,KADnB;AAEE,IAAA,WAAW,EAAEC,WAFf;AAGE,IAAA,aAAa,EAAEJ,QAHjB;AAIE,IAAA,aAAa,EAAER,aAJjB;AAKE,IAAA,KAAK,EAAE;AAAEe,MAAAA,eAAe,EAAE;AAAnB,KALT;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD","sourcesContent":["import React from 'react';\r\n\r\nimport { Dimensions } from 'react-native';\r\nimport { TabView, SceneMap } from 'react-native-tab-view';\r\n\r\nimport Search from '../pages/Search';\r\nimport MyDeck from '../pages/MyDeck';\r\n\r\n\r\nconst SearchScreen = () => (\r\n <Search></Search>\r\n);\r\n\r\nconst MyDeckScreen = () => (\r\n  <MyDeck></MyDeck>\r\n);\r\n\r\nconst initialLayout = { width: Dimensions.get('window').width };\r\n\r\nexport default function Main() {\r\n  const [index, setIndex] = React.useState(0);\r\n  const [routes] = React.useState([\r\n    { key: 'first', title: 'Search' },\r\n    { key: 'second', title: 'My Deck' },\r\n  ]);\r\n\r\n  const renderScene = SceneMap({\r\n    first: SearchScreen,\r\n    second: MyDeckScreen,\r\n  });\r\n\r\n  return (\r\n    <TabView\r\n      navigationState={{ index, routes }}\r\n      renderScene={renderScene}\r\n      onIndexChange={setIndex}\r\n      initialLayout={initialLayout}\r\n      style={{ backgroundColor: '#333333'}}\r\n\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"script"}