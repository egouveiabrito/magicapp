{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.PricingCard = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _helpers = require(\"../helpers\");\n\nvar _config = require(\"../config\");\n\nvar _Text = _interopRequireDefault(require(\"../text/Text\"));\n\nvar _Button = _interopRequireDefault(require(\"../buttons/Button\"));\n\nvar _Icon = _interopRequireDefault(require(\"../icons/Icon\"));\n\nvar _jsxFileName = \"C:\\\\React\\\\magic\\\\node_modules\\\\react-native-elements\\\\src\\\\pricing\\\\PricingCard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar PricingCard = function PricingCard(props) {\n  var theme = props.theme,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"theme\"]);\n  var containerStyle = rest.containerStyle,\n      wrapperStyle = rest.wrapperStyle,\n      title = rest.title,\n      price = rest.price,\n      info = rest.info,\n      button = rest.button,\n      _rest$color = rest.color,\n      color = _rest$color === void 0 ? theme.colors.primary : _rest$color,\n      titleStyle = rest.titleStyle,\n      pricingStyle = rest.pricingStyle,\n      infoStyle = rest.infoStyle,\n      onButtonPress = rest.onButtonPress,\n      attributes = (0, _objectWithoutProperties2.default)(rest, [\"containerStyle\", \"wrapperStyle\", \"title\", \"price\", \"info\", \"button\", \"color\", \"titleStyle\", \"pricingStyle\", \"infoStyle\", \"onButtonPress\"]);\n  return _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, attributes, {\n    style: _reactNative.StyleSheet.flatten([styles.container(theme), containerStyle && containerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: _reactNative.StyleSheet.flatten([styles.wrapper, wrapperStyle && wrapperStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    }\n  }, _react.default.createElement(_Text.default, {\n    testID: \"pricingCardTitle\",\n    style: _reactNative.StyleSheet.flatten([styles.pricingTitle, titleStyle, {\n      color: color\n    }]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    }\n  }, title), _react.default.createElement(_Text.default, {\n    style: _reactNative.StyleSheet.flatten([styles.pricingPrice, pricingStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    }\n  }, price), info.map(function (item) {\n    return _react.default.createElement(_Text.default, {\n      key: item,\n      style: _reactNative.StyleSheet.flatten([styles.pricingInfo(theme), infoStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      }\n    }, item);\n  }), _react.default.createElement(_Button.default, {\n    title: button.title,\n    buttonStyle: _reactNative.StyleSheet.flatten([styles.button, button.buttonStyle, {\n      backgroundColor: color\n    }]),\n    titleStyle: button.titleStyle,\n    onPress: onButtonPress,\n    icon: _react.default.createElement(_Icon.default, {\n      name: button.icon,\n      size: 15,\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    }\n  })));\n};\n\nexports.PricingCard = PricingCard;\nPricingCard.propTypes = {\n  containerStyle: _config.ViewPropTypes.style,\n  wrapperStyle: _config.ViewPropTypes.style,\n  title: _propTypes.default.string,\n  price: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n  info: _propTypes.default.arrayOf(_propTypes.default.string),\n  button: _propTypes.default.object,\n  color: _propTypes.default.string,\n  onButtonPress: _propTypes.default.func,\n  titleStyle: _reactNative.Text.propTypes.style,\n  pricingStyle: _reactNative.Text.propTypes.style,\n  infoStyle: _reactNative.Text.propTypes.style,\n  theme: _propTypes.default.object\n};\nPricingCard.defaultProps = {\n  info: []\n};\nvar styles = {\n  container: function container(theme) {\n    return _objectSpread({\n      margin: 15,\n      marginBottom: 15,\n      backgroundColor: 'white',\n      borderWidth: 1,\n      padding: 15,\n      borderColor: theme.colors.grey5\n    }, _reactNative.Platform.select({\n      android: {\n        elevation: 1\n      },\n      default: {\n        shadowColor: 'rgba(0,0,0, .2)',\n        shadowOffset: {\n          height: 1,\n          width: 0\n        },\n        shadowOpacity: 0.5,\n        shadowRadius: 0.5\n      }\n    }));\n  },\n  wrapper: {\n    backgroundColor: 'transparent'\n  },\n  pricingTitle: _objectSpread({\n    textAlign: 'center',\n    fontSize: (0, _helpers.normalizeText)(30)\n  }, _reactNative.Platform.select({\n    android: _objectSpread({}, _config.fonts.android.black),\n    default: {\n      fontWeight: '800'\n    }\n  })),\n  pricingPrice: _objectSpread({\n    textAlign: 'center',\n    marginTop: 10,\n    marginBottom: 10,\n    fontSize: (0, _helpers.normalizeText)(40)\n  }, _reactNative.Platform.select({\n    android: _objectSpread({}, _config.fonts.android.bold),\n    default: {\n      fontWeight: '700'\n    }\n  })),\n  pricingInfo: function pricingInfo(theme) {\n    return _objectSpread({\n      textAlign: 'center',\n      marginTop: 5,\n      marginBottom: 5,\n      color: theme.colors.grey3\n    }, _reactNative.Platform.select({\n      android: _objectSpread({}, _config.fonts.android.bold),\n      default: {\n        fontWeight: '600'\n      }\n    }));\n  },\n  button: {\n    marginTop: 15,\n    marginBottom: 10\n  }\n};\n\nvar _default = (0, _config.withTheme)(PricingCard, 'PricingCard');\n\nexports.default = _default;","map":{"version":3,"sources":["C:/React/magic/node_modules/react-native-elements/src/pricing/PricingCard.js"],"names":["PricingCard","props","theme","rest","containerStyle","wrapperStyle","title","price","info","button","color","colors","primary","titleStyle","pricingStyle","infoStyle","onButtonPress","attributes","StyleSheet","flatten","styles","container","wrapper","pricingTitle","pricingPrice","map","item","pricingInfo","buttonStyle","backgroundColor","icon","propTypes","ViewPropTypes","style","PropTypes","string","oneOfType","number","arrayOf","object","func","RNText","defaultProps","margin","marginBottom","borderWidth","padding","borderColor","grey5","Platform","select","android","elevation","default","shadowColor","shadowOffset","height","width","shadowOpacity","shadowRadius","textAlign","fontSize","fonts","black","fontWeight","marginTop","bold","grey3"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { View, Platform, StyleSheet, Text as RNText } from 'react-native';\n\nimport { normalizeText } from '../helpers';\nimport { fonts, ViewPropTypes, withTheme } from '../config';\n\nimport Text from '../text/Text';\nimport Button from '../buttons/Button';\nimport Icon from '../icons/Icon';\n\nconst PricingCard = props => {\n  const { theme, ...rest } = props;\n\n  const {\n    containerStyle,\n    wrapperStyle,\n    title,\n    price,\n    info,\n    button,\n    color = theme.colors.primary,\n    titleStyle,\n    pricingStyle,\n    infoStyle,\n    onButtonPress,\n    ...attributes\n  } = rest;\n\n  return (\n    <View\n      {...attributes}\n      style={StyleSheet.flatten([\n        styles.container(theme),\n        containerStyle && containerStyle,\n      ])}\n    >\n      <View\n        style={StyleSheet.flatten([\n          styles.wrapper,\n          wrapperStyle && wrapperStyle,\n        ])}\n      >\n        <Text\n          testID=\"pricingCardTitle\"\n          style={StyleSheet.flatten([\n            styles.pricingTitle,\n            titleStyle,\n            { color },\n          ])}\n        >\n          {title}\n        </Text>\n\n        <Text style={StyleSheet.flatten([styles.pricingPrice, pricingStyle])}>\n          {price}\n        </Text>\n\n        {info.map(item => (\n          <Text\n            key={item}\n            style={StyleSheet.flatten([styles.pricingInfo(theme), infoStyle])}\n          >\n            {item}\n          </Text>\n        ))}\n\n        <Button\n          title={button.title}\n          buttonStyle={StyleSheet.flatten([\n            styles.button,\n            button.buttonStyle,\n            { backgroundColor: color },\n          ])}\n          titleStyle={button.titleStyle}\n          onPress={onButtonPress}\n          icon={<Icon name={button.icon} size={15} color=\"white\" />}\n        />\n      </View>\n    </View>\n  );\n};\n\nPricingCard.propTypes = {\n  containerStyle: ViewPropTypes.style,\n  wrapperStyle: ViewPropTypes.style,\n  title: PropTypes.string,\n  price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  info: PropTypes.arrayOf(PropTypes.string),\n  button: PropTypes.object,\n  color: PropTypes.string,\n  onButtonPress: PropTypes.func,\n  titleStyle: RNText.propTypes.style,\n  pricingStyle: RNText.propTypes.style,\n  infoStyle: RNText.propTypes.style,\n  theme: PropTypes.object,\n};\n\nPricingCard.defaultProps = {\n  info: [],\n};\n\nconst styles = {\n  container: theme => ({\n    margin: 15,\n    marginBottom: 15,\n    backgroundColor: 'white',\n    borderWidth: 1,\n    padding: 15,\n    borderColor: theme.colors.grey5,\n    ...Platform.select({\n      android: {\n        elevation: 1,\n      },\n      default: {\n        shadowColor: 'rgba(0,0,0, .2)',\n        shadowOffset: { height: 1, width: 0 },\n        shadowOpacity: 0.5,\n        shadowRadius: 0.5,\n      },\n    }),\n  }),\n  wrapper: {\n    backgroundColor: 'transparent',\n  },\n  pricingTitle: {\n    textAlign: 'center',\n    fontSize: normalizeText(30),\n    ...Platform.select({\n      android: {\n        ...fonts.android.black,\n      },\n      default: {\n        fontWeight: '800',\n      },\n    }),\n  },\n  pricingPrice: {\n    textAlign: 'center',\n    marginTop: 10,\n    marginBottom: 10,\n    fontSize: normalizeText(40),\n    ...Platform.select({\n      android: {\n        ...fonts.android.bold,\n      },\n      default: {\n        fontWeight: '700',\n      },\n    }),\n  },\n  pricingInfo: theme => ({\n    textAlign: 'center',\n    marginTop: 5,\n    marginBottom: 5,\n    color: theme.colors.grey3,\n    ...Platform.select({\n      android: {\n        ...fonts.android.bold,\n      },\n      default: {\n        fontWeight: '600',\n      },\n    }),\n  }),\n  button: {\n    marginTop: 15,\n    marginBottom: 10,\n  },\n};\n\nexport { PricingCard };\nexport default withTheme(PricingCard, 'PricingCard');\n"]},"metadata":{},"sourceType":"script"}