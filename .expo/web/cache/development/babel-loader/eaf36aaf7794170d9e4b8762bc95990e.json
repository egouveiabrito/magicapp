{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Card = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _normalizeText = _interopRequireDefault(require(\"../helpers/normalizeText\"));\n\nvar _config = require(\"../config\");\n\nvar _Text = _interopRequireDefault(require(\"../text/Text\"));\n\nvar _Divider = _interopRequireDefault(require(\"../divider/Divider\"));\n\nvar _Image = _interopRequireDefault(require(\"../image/Image\"));\n\nvar _jsxFileName = \"C:\\\\React\\\\magic\\\\node_modules\\\\react-native-elements\\\\src\\\\card\\\\Card.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar Card = function Card(props) {\n  var children = props.children,\n      containerStyle = props.containerStyle,\n      wrapperStyle = props.wrapperStyle,\n      imageWrapperStyle = props.imageWrapperStyle,\n      title = props.title,\n      titleStyle = props.titleStyle,\n      titleNumberOfLines = props.titleNumberOfLines,\n      featuredTitle = props.featuredTitle,\n      featuredTitleStyle = props.featuredTitleStyle,\n      featuredSubtitle = props.featuredSubtitle,\n      featuredSubtitleStyle = props.featuredSubtitleStyle,\n      dividerStyle = props.dividerStyle,\n      image = props.image,\n      imageStyle = props.imageStyle,\n      imageProps = props.imageProps,\n      theme = props.theme,\n      attributes = (0, _objectWithoutProperties2.default)(props, [\"children\", \"containerStyle\", \"wrapperStyle\", \"imageWrapperStyle\", \"title\", \"titleStyle\", \"titleNumberOfLines\", \"featuredTitle\", \"featuredTitleStyle\", \"featuredSubtitle\", \"featuredSubtitleStyle\", \"dividerStyle\", \"image\", \"imageStyle\", \"imageProps\", \"theme\"]);\n  return _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, attributes, {\n    style: _reactNative.StyleSheet.flatten([styles.container(theme), image && {\n      padding: 0\n    }, containerStyle && containerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: _reactNative.StyleSheet.flatten([styles.wrapper, wrapperStyle && wrapperStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    }\n  }, title === '' || _react.default.isValidElement(title) ? title : title && title.length && _react.default.createElement(_reactNative.View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    }\n  }, _react.default.createElement(_Text.default, {\n    testID: \"cardTitle\",\n    style: _reactNative.StyleSheet.flatten([styles.cardTitle(theme), image && styles.imageCardTitle, titleStyle && titleStyle]),\n    numberOfLines: titleNumberOfLines,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    }\n  }, title), !image && _react.default.createElement(_Divider.default, {\n    style: _reactNative.StyleSheet.flatten([styles.divider, dividerStyle && dividerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    }\n  })), image && _react.default.createElement(_reactNative.View, {\n    style: imageWrapperStyle && imageWrapperStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    }\n  }, _react.default.createElement(_Image.default, (0, _extends2.default)({\n    style: [{\n      width: null,\n      height: 150\n    }, imageStyle && imageStyle],\n    source: image\n  }, imageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    }\n  }), (featuredTitle || featuredSubtitle) && _react.default.createElement(_reactNative.View, {\n    style: styles.overlayContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    }\n  }, featuredTitle && _react.default.createElement(_Text.default, {\n    style: _reactNative.StyleSheet.flatten([styles.featuredTitle, featuredTitleStyle && featuredTitleStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    }\n  }, featuredTitle), featuredSubtitle && _react.default.createElement(_Text.default, {\n    style: _reactNative.StyleSheet.flatten([styles.featuredSubtitle, featuredSubtitleStyle && featuredSubtitleStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    }\n  }, featuredSubtitle))), _react.default.createElement(_reactNative.View, {\n    style: _reactNative.StyleSheet.flatten([{\n      padding: 10\n    }, wrapperStyle && wrapperStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    }\n  }, children)), !image && children));\n};\n\nexports.Card = Card;\nCard.propTypes = {\n  children: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.arrayOf(_propTypes.default.element)]),\n  containerStyle: _config.ViewPropTypes.style,\n  wrapperStyle: _config.ViewPropTypes.style,\n  overlayStyle: _config.ViewPropTypes.style,\n  title: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),\n  titleStyle: _config.TextPropTypes.style,\n  featuredTitle: _propTypes.default.string,\n  featuredTitleStyle: _config.TextPropTypes.style,\n  featuredSubtitle: _propTypes.default.string,\n  featuredSubtitleStyle: _config.TextPropTypes.style,\n  dividerStyle: _config.ViewPropTypes.style,\n  image: _reactNative.Image.propTypes.source,\n  imageStyle: _config.ViewPropTypes.style,\n  imageWrapperStyle: _config.ViewPropTypes.style,\n  imageProps: _propTypes.default.object,\n  titleNumberOfLines: _propTypes.default.number,\n  theme: _propTypes.default.object\n};\nvar styles = {\n  container: function container(theme) {\n    return _objectSpread({\n      backgroundColor: 'white',\n      borderWidth: 1,\n      padding: 15,\n      margin: 15,\n      marginBottom: 0,\n      borderColor: theme.colors.grey5\n    }, _reactNative.Platform.select({\n      android: {\n        elevation: 1\n      },\n      default: {\n        shadowColor: 'rgba(0,0,0, .2)',\n        shadowOffset: {\n          height: 0,\n          width: 0\n        },\n        shadowOpacity: 1,\n        shadowRadius: 1\n      }\n    }));\n  },\n  featuredTitle: _objectSpread({\n    fontSize: (0, _normalizeText.default)(18),\n    marginBottom: 8,\n    color: 'white'\n  }, _reactNative.Platform.select({\n    android: _objectSpread({}, _config.fonts.android.black),\n    default: {\n      fontWeight: '800'\n    }\n  })),\n  featuredSubtitle: _objectSpread({\n    fontSize: (0, _normalizeText.default)(13),\n    marginBottom: 8,\n    color: 'white'\n  }, _reactNative.Platform.select({\n    android: _objectSpread({}, _config.fonts.android.black),\n    default: {\n      fontWeight: '400'\n    }\n  })),\n  wrapper: {\n    backgroundColor: 'transparent'\n  },\n  divider: {\n    marginBottom: 15\n  },\n  cardTitle: function cardTitle(theme) {\n    return _objectSpread({\n      fontSize: (0, _normalizeText.default)(14),\n      color: theme.colors.grey1\n    }, _reactNative.Platform.select({\n      android: _objectSpread({}, _config.fonts.android.black),\n      default: {\n        fontWeight: 'bold'\n      }\n    }), {\n      textAlign: 'center',\n      marginBottom: 15\n    });\n  },\n  imageCardTitle: {\n    marginTop: 15\n  },\n  overlayContainer: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.2)',\n    alignSelf: 'stretch',\n    justifyContent: 'center',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n};\n\nvar _default = (0, _config.withTheme)(Card, 'Card');\n\nexports.default = _default;","map":{"version":3,"sources":["C:/React/magic/node_modules/react-native-elements/src/card/Card.js"],"names":["Card","props","children","containerStyle","wrapperStyle","imageWrapperStyle","title","titleStyle","titleNumberOfLines","featuredTitle","featuredTitleStyle","featuredSubtitle","featuredSubtitleStyle","dividerStyle","image","imageStyle","imageProps","theme","attributes","StyleSheet","flatten","styles","container","padding","wrapper","React","isValidElement","length","cardTitle","imageCardTitle","divider","width","height","overlayContainer","propTypes","PropTypes","oneOfType","element","arrayOf","ViewPropTypes","style","overlayStyle","string","TextPropTypes","ImageNative","source","object","number","backgroundColor","borderWidth","margin","marginBottom","borderColor","colors","grey5","Platform","select","android","elevation","default","shadowColor","shadowOffset","shadowOpacity","shadowRadius","fontSize","color","fonts","black","fontWeight","grey1","textAlign","marginTop","flex","alignItems","alignSelf","justifyContent","position","top","left","right","bottom"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;AAAA,MAElBC,QAFkB,GAmBhBD,KAnBgB,CAElBC,QAFkB;AAAA,MAGlBC,cAHkB,GAmBhBF,KAnBgB,CAGlBE,cAHkB;AAAA,MAIlBC,YAJkB,GAmBhBH,KAnBgB,CAIlBG,YAJkB;AAAA,MAKlBC,iBALkB,GAmBhBJ,KAnBgB,CAKlBI,iBALkB;AAAA,MAMlBC,KANkB,GAmBhBL,KAnBgB,CAMlBK,KANkB;AAAA,MAOlBC,UAPkB,GAmBhBN,KAnBgB,CAOlBM,UAPkB;AAAA,MAQlBC,kBARkB,GAmBhBP,KAnBgB,CAQlBO,kBARkB;AAAA,MASlBC,aATkB,GAmBhBR,KAnBgB,CASlBQ,aATkB;AAAA,MAUlBC,kBAVkB,GAmBhBT,KAnBgB,CAUlBS,kBAVkB;AAAA,MAWlBC,gBAXkB,GAmBhBV,KAnBgB,CAWlBU,gBAXkB;AAAA,MAYlBC,qBAZkB,GAmBhBX,KAnBgB,CAYlBW,qBAZkB;AAAA,MAalBC,YAbkB,GAmBhBZ,KAnBgB,CAalBY,YAbkB;AAAA,MAclBC,KAdkB,GAmBhBb,KAnBgB,CAclBa,KAdkB;AAAA,MAelBC,UAfkB,GAmBhBd,KAnBgB,CAelBc,UAfkB;AAAA,MAgBlBC,UAhBkB,GAmBhBf,KAnBgB,CAgBlBe,UAhBkB;AAAA,MAiBlBC,KAjBkB,GAmBhBhB,KAnBgB,CAiBlBgB,KAjBkB;AAAA,MAkBfC,UAlBe,0CAmBhBjB,KAnBgB;AAqBpB,SACE,6BAAC,iBAAD,6BACMiB,UADN;AAEE,IAAA,KAAK,EAAEC,wBAAWC,OAAX,CAAmB,CACxBC,MAAM,CAACC,SAAP,CAAiBL,KAAjB,CADwB,EAExBH,KAAK,IAAI;AAAES,MAAAA,OAAO,EAAE;AAAX,KAFe,EAGxBpB,cAAc,IAAIA,cAHM,CAAnB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA,MAQE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAEgB,wBAAWC,OAAX,CAAmB,CACxBC,MAAM,CAACG,OADiB,EAExBpB,YAAY,IAAIA,YAFQ,CAAnB,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGE,KAAK,KAAK,EAAV,IAAgBmB,eAAMC,cAAN,CAAqBpB,KAArB,CAAhB,GACGA,KADH,GAEGA,KAAK,IACLA,KAAK,CAACqB,MADN,IAEE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,aAAD;AACE,IAAA,MAAM,EAAC,WADT;AAEE,IAAA,KAAK,EAAER,wBAAWC,OAAX,CAAmB,CACxBC,MAAM,CAACO,SAAP,CAAiBX,KAAjB,CADwB,EAExBH,KAAK,IAAIO,MAAM,CAACQ,cAFQ,EAGxBtB,UAAU,IAAIA,UAHU,CAAnB,CAFT;AAOE,IAAA,aAAa,EAAEC,kBAPjB;AAAA;AAAA;AAAA;AAAA;AAAA,KASGF,KATH,CADF,EAaG,CAACQ,KAAD,IACC,6BAAC,gBAAD;AACE,IAAA,KAAK,EAAEK,wBAAWC,OAAX,CAAmB,CACxBC,MAAM,CAACS,OADiB,EAExBjB,YAAY,IAAIA,YAFQ,CAAnB,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CAVR,EAkCGC,KAAK,IACJ,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAET,iBAAiB,IAAIA,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,cAAD;AACE,IAAA,KAAK,EAAE,CAAC;AAAE0B,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,MAAM,EAAE;AAAvB,KAAD,EAA+BjB,UAAU,IAAIA,UAA7C,CADT;AAEE,IAAA,MAAM,EAAED;AAFV,KAGME,UAHN;AAAA;AAAA;AAAA;AAAA;AAAA,MAKG,CAACP,aAAa,IAAIE,gBAAlB,KACC,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACY,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,aAAa,IACZ,6BAAC,aAAD;AACE,IAAA,KAAK,EAAEU,wBAAWC,OAAX,CAAmB,CACxBC,MAAM,CAACZ,aADiB,EAExBC,kBAAkB,IAAIA,kBAFE,CAAnB,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGD,aANH,CAFJ,EAWGE,gBAAgB,IACf,6BAAC,aAAD;AACE,IAAA,KAAK,EAAEQ,wBAAWC,OAAX,CAAmB,CACxBC,MAAM,CAACV,gBADiB,EAExBC,qBAAqB,IAAIA,qBAFD,CAAnB,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGD,gBANH,CAZJ,CANJ,CADF,EAgCE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAEQ,wBAAWC,OAAX,CAAmB,CACxB;AAAEG,MAAAA,OAAO,EAAE;AAAX,KADwB,EAExBnB,YAAY,IAAIA,YAFQ,CAAnB,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGF,QANH,CAhCF,CAnCJ,EA8EG,CAACY,KAAD,IAAUZ,QA9Eb,CARF,CADF;AA2FD,CAhHD;;;AAkHAF,IAAI,CAACkC,SAAL,GAAiB;AACfhC,EAAAA,QAAQ,EAAEiC,mBAAUC,SAAV,CAAoB,CAC5BD,mBAAUE,OADkB,EAE5BF,mBAAUG,OAAV,CAAkBH,mBAAUE,OAA5B,CAF4B,CAApB,CADK;AAKflC,EAAAA,cAAc,EAAEoC,sBAAcC,KALf;AAMfpC,EAAAA,YAAY,EAAEmC,sBAAcC,KANb;AAOfC,EAAAA,YAAY,EAAEF,sBAAcC,KAPb;AAQflC,EAAAA,KAAK,EAAE6B,mBAAUC,SAAV,CAAoB,CAACD,mBAAUO,MAAX,EAAmBP,mBAAUE,OAA7B,CAApB,CARQ;AASf9B,EAAAA,UAAU,EAAEoC,sBAAcH,KATX;AAUf/B,EAAAA,aAAa,EAAE0B,mBAAUO,MAVV;AAWfhC,EAAAA,kBAAkB,EAAEiC,sBAAcH,KAXnB;AAYf7B,EAAAA,gBAAgB,EAAEwB,mBAAUO,MAZb;AAaf9B,EAAAA,qBAAqB,EAAE+B,sBAAcH,KAbtB;AAcf3B,EAAAA,YAAY,EAAE0B,sBAAcC,KAdb;AAef1B,EAAAA,KAAK,EAAE8B,mBAAYV,SAAZ,CAAsBW,MAfd;AAgBf9B,EAAAA,UAAU,EAAEwB,sBAAcC,KAhBX;AAiBfnC,EAAAA,iBAAiB,EAAEkC,sBAAcC,KAjBlB;AAkBfxB,EAAAA,UAAU,EAAEmB,mBAAUW,MAlBP;AAmBftC,EAAAA,kBAAkB,EAAE2B,mBAAUY,MAnBf;AAoBf9B,EAAAA,KAAK,EAAEkB,mBAAUW;AApBF,CAAjB;AAuBA,IAAMzB,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE,mBAAAL,KAAK;AAAA;AACd+B,MAAAA,eAAe,EAAE,OADH;AAEdC,MAAAA,WAAW,EAAE,CAFC;AAGd1B,MAAAA,OAAO,EAAE,EAHK;AAId2B,MAAAA,MAAM,EAAE,EAJM;AAKdC,MAAAA,YAAY,EAAE,CALA;AAMdC,MAAAA,WAAW,EAAEnC,KAAK,CAACoC,MAAN,CAAaC;AANZ,OAOXC,sBAASC,MAAT,CAAgB;AACjBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,SAAS,EAAE;AADJ,OADQ;AAIjBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,WAAW,EAAE,iBADN;AAEPC,QAAAA,YAAY,EAAE;AAAE7B,UAAAA,MAAM,EAAE,CAAV;AAAaD,UAAAA,KAAK,EAAE;AAApB,SAFP;AAGP+B,QAAAA,aAAa,EAAE,CAHR;AAIPC,QAAAA,YAAY,EAAE;AAJP;AAJQ,KAAhB,CAPW;AAAA,GADH;AAoBbtD,EAAAA,aAAa;AACXuD,IAAAA,QAAQ,EAAE,4BAAU,EAAV,CADC;AAEXb,IAAAA,YAAY,EAAE,CAFH;AAGXc,IAAAA,KAAK,EAAE;AAHI,KAIRV,sBAASC,MAAT,CAAgB;AACjBC,IAAAA,OAAO,oBACFS,cAAMT,OAAN,CAAcU,KADZ,CADU;AAIjBR,IAAAA,OAAO,EAAE;AACPS,MAAAA,UAAU,EAAE;AADL;AAJQ,GAAhB,CAJQ,CApBA;AAiCbzD,EAAAA,gBAAgB;AACdqD,IAAAA,QAAQ,EAAE,4BAAU,EAAV,CADI;AAEdb,IAAAA,YAAY,EAAE,CAFA;AAGdc,IAAAA,KAAK,EAAE;AAHO,KAIXV,sBAASC,MAAT,CAAgB;AACjBC,IAAAA,OAAO,oBACFS,cAAMT,OAAN,CAAcU,KADZ,CADU;AAIjBR,IAAAA,OAAO,EAAE;AACPS,MAAAA,UAAU,EAAE;AADL;AAJQ,GAAhB,CAJW,CAjCH;AA8Cb5C,EAAAA,OAAO,EAAE;AACPwB,IAAAA,eAAe,EAAE;AADV,GA9CI;AAiDblB,EAAAA,OAAO,EAAE;AACPqB,IAAAA,YAAY,EAAE;AADP,GAjDI;AAoDbvB,EAAAA,SAAS,EAAE,mBAAAX,KAAK;AAAA;AACd+C,MAAAA,QAAQ,EAAE,4BAAU,EAAV,CADI;AAEdC,MAAAA,KAAK,EAAEhD,KAAK,CAACoC,MAAN,CAAagB;AAFN,OAGXd,sBAASC,MAAT,CAAgB;AACjBC,MAAAA,OAAO,oBACFS,cAAMT,OAAN,CAAcU,KADZ,CADU;AAIjBR,MAAAA,OAAO,EAAE;AACPS,QAAAA,UAAU,EAAE;AADL;AAJQ,KAAhB,CAHW;AAWdE,MAAAA,SAAS,EAAE,QAXG;AAYdnB,MAAAA,YAAY,EAAE;AAZA;AAAA,GApDH;AAkEbtB,EAAAA,cAAc,EAAE;AACd0C,IAAAA,SAAS,EAAE;AADG,GAlEH;AAqEbtC,EAAAA,gBAAgB,EAAE;AAChBuC,IAAAA,IAAI,EAAE,CADU;AAEhBC,IAAAA,UAAU,EAAE,QAFI;AAGhBzB,IAAAA,eAAe,EAAE,oBAHD;AAIhB0B,IAAAA,SAAS,EAAE,SAJK;AAKhBC,IAAAA,cAAc,EAAE,QALA;AAMhBC,IAAAA,QAAQ,EAAE,UANM;AAOhBC,IAAAA,GAAG,EAAE,CAPW;AAQhBC,IAAAA,IAAI,EAAE,CARU;AAShBC,IAAAA,KAAK,EAAE,CATS;AAUhBC,IAAAA,MAAM,EAAE;AAVQ;AArEL,CAAf;;eAoFe,uBAAUhF,IAAV,EAAgB,MAAhB,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { View, Platform, Image as ImageNative, StyleSheet } from 'react-native';\n\nimport normalize from '../helpers/normalizeText';\nimport { fonts, TextPropTypes, ViewPropTypes, withTheme } from '../config';\n\nimport Text from '../text/Text';\nimport Divider from '../divider/Divider';\nimport Image from '../image/Image';\n\nconst Card = props => {\n  const {\n    children,\n    containerStyle,\n    wrapperStyle,\n    imageWrapperStyle,\n    title,\n    titleStyle,\n    titleNumberOfLines,\n    featuredTitle,\n    featuredTitleStyle,\n    featuredSubtitle,\n    featuredSubtitleStyle,\n    dividerStyle,\n    image,\n    imageStyle,\n    imageProps,\n    theme,\n    ...attributes\n  } = props;\n\n  return (\n    <View\n      {...attributes}\n      style={StyleSheet.flatten([\n        styles.container(theme),\n        image && { padding: 0 },\n        containerStyle && containerStyle,\n      ])}\n    >\n      <View\n        style={StyleSheet.flatten([\n          styles.wrapper,\n          wrapperStyle && wrapperStyle,\n        ])}\n      >\n        {title === '' || React.isValidElement(title)\n          ? title\n          : title &&\n            title.length && (\n              <View>\n                <Text\n                  testID=\"cardTitle\"\n                  style={StyleSheet.flatten([\n                    styles.cardTitle(theme),\n                    image && styles.imageCardTitle,\n                    titleStyle && titleStyle,\n                  ])}\n                  numberOfLines={titleNumberOfLines}\n                >\n                  {title}\n                </Text>\n\n                {!image && (\n                  <Divider\n                    style={StyleSheet.flatten([\n                      styles.divider,\n                      dividerStyle && dividerStyle,\n                    ])}\n                  />\n                )}\n              </View>\n            )}\n\n        {image && (\n          <View style={imageWrapperStyle && imageWrapperStyle}>\n            <Image\n              style={[{ width: null, height: 150 }, imageStyle && imageStyle]}\n              source={image}\n              {...imageProps}\n            >\n              {(featuredTitle || featuredSubtitle) && (\n                <View style={styles.overlayContainer}>\n                  {featuredTitle && (\n                    <Text\n                      style={StyleSheet.flatten([\n                        styles.featuredTitle,\n                        featuredTitleStyle && featuredTitleStyle,\n                      ])}\n                    >\n                      {featuredTitle}\n                    </Text>\n                  )}\n                  {featuredSubtitle && (\n                    <Text\n                      style={StyleSheet.flatten([\n                        styles.featuredSubtitle,\n                        featuredSubtitleStyle && featuredSubtitleStyle,\n                      ])}\n                    >\n                      {featuredSubtitle}\n                    </Text>\n                  )}\n                </View>\n              )}\n            </Image>\n\n            <View\n              style={StyleSheet.flatten([\n                { padding: 10 },\n                wrapperStyle && wrapperStyle,\n              ])}\n            >\n              {children}\n            </View>\n          </View>\n        )}\n\n        {!image && children}\n      </View>\n    </View>\n  );\n};\n\nCard.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element),\n  ]),\n  containerStyle: ViewPropTypes.style,\n  wrapperStyle: ViewPropTypes.style,\n  overlayStyle: ViewPropTypes.style,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  titleStyle: TextPropTypes.style,\n  featuredTitle: PropTypes.string,\n  featuredTitleStyle: TextPropTypes.style,\n  featuredSubtitle: PropTypes.string,\n  featuredSubtitleStyle: TextPropTypes.style,\n  dividerStyle: ViewPropTypes.style,\n  image: ImageNative.propTypes.source,\n  imageStyle: ViewPropTypes.style,\n  imageWrapperStyle: ViewPropTypes.style,\n  imageProps: PropTypes.object,\n  titleNumberOfLines: PropTypes.number,\n  theme: PropTypes.object,\n};\n\nconst styles = {\n  container: theme => ({\n    backgroundColor: 'white',\n    borderWidth: 1,\n    padding: 15,\n    margin: 15,\n    marginBottom: 0,\n    borderColor: theme.colors.grey5,\n    ...Platform.select({\n      android: {\n        elevation: 1,\n      },\n      default: {\n        shadowColor: 'rgba(0,0,0, .2)',\n        shadowOffset: { height: 0, width: 0 },\n        shadowOpacity: 1,\n        shadowRadius: 1,\n      },\n    }),\n  }),\n  featuredTitle: {\n    fontSize: normalize(18),\n    marginBottom: 8,\n    color: 'white',\n    ...Platform.select({\n      android: {\n        ...fonts.android.black,\n      },\n      default: {\n        fontWeight: '800',\n      },\n    }),\n  },\n  featuredSubtitle: {\n    fontSize: normalize(13),\n    marginBottom: 8,\n    color: 'white',\n    ...Platform.select({\n      android: {\n        ...fonts.android.black,\n      },\n      default: {\n        fontWeight: '400',\n      },\n    }),\n  },\n  wrapper: {\n    backgroundColor: 'transparent',\n  },\n  divider: {\n    marginBottom: 15,\n  },\n  cardTitle: theme => ({\n    fontSize: normalize(14),\n    color: theme.colors.grey1,\n    ...Platform.select({\n      android: {\n        ...fonts.android.black,\n      },\n      default: {\n        fontWeight: 'bold',\n      },\n    }),\n    textAlign: 'center',\n    marginBottom: 15,\n  }),\n  imageCardTitle: {\n    marginTop: 15,\n  },\n  overlayContainer: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.2)',\n    alignSelf: 'stretch',\n    justifyContent: 'center',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n};\n\nexport { Card };\nexport default withTheme(Card, 'Card');\n"]},"metadata":{},"sourceType":"script"}