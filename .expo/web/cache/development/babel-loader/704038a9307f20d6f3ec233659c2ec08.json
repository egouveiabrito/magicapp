{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.ButtonGroup = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _config = require(\"../config\");\n\nvar _helpers = require(\"../helpers\");\n\nvar _Text = _interopRequireDefault(require(\"../text/Text\"));\n\nvar _jsxFileName = \"C:\\\\React\\\\magic\\\\node_modules\\\\react-native-elements\\\\src\\\\buttons\\\\ButtonGroup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar ButtonGroup = function ButtonGroup(props) {\n  var theme = props.theme,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"theme\"]);\n  var Component = rest.Component,\n      buttons = rest.buttons,\n      _onPress = rest.onPress,\n      selectedIndex = rest.selectedIndex,\n      selectedIndexes = rest.selectedIndexes,\n      selectMultiple = rest.selectMultiple,\n      containerStyle = rest.containerStyle,\n      innerBorderStyle = rest.innerBorderStyle,\n      lastBorderStyle = rest.lastBorderStyle,\n      buttonStyle = rest.buttonStyle,\n      textStyle = rest.textStyle,\n      selectedTextStyle = rest.selectedTextStyle,\n      selectedButtonStyle = rest.selectedButtonStyle,\n      _rest$underlayColor = rest.underlayColor,\n      underlayColor = _rest$underlayColor === void 0 ? theme.colors.primary : _rest$underlayColor,\n      activeOpacity = rest.activeOpacity,\n      onHideUnderlay = rest.onHideUnderlay,\n      onShowUnderlay = rest.onShowUnderlay,\n      setOpacityTo = rest.setOpacityTo,\n      containerBorderRadius = rest.containerBorderRadius,\n      disabled = rest.disabled,\n      disabledStyle = rest.disabledStyle,\n      disabledTextStyle = rest.disabledTextStyle,\n      disabledSelectedStyle = rest.disabledSelectedStyle,\n      disabledSelectedTextStyle = rest.disabledSelectedTextStyle,\n      attributes = (0, _objectWithoutProperties2.default)(rest, [\"Component\", \"buttons\", \"onPress\", \"selectedIndex\", \"selectedIndexes\", \"selectMultiple\", \"containerStyle\", \"innerBorderStyle\", \"lastBorderStyle\", \"buttonStyle\", \"textStyle\", \"selectedTextStyle\", \"selectedButtonStyle\", \"underlayColor\", \"activeOpacity\", \"onHideUnderlay\", \"onShowUnderlay\", \"setOpacityTo\", \"containerBorderRadius\", \"disabled\", \"disabledStyle\", \"disabledTextStyle\", \"disabledSelectedStyle\", \"disabledSelectedTextStyle\"]);\n  var innerBorderWidth = 1;\n\n  if (innerBorderStyle && Object.prototype.hasOwnProperty.call(innerBorderStyle, 'width')) {\n    innerBorderWidth = innerBorderStyle.width;\n  }\n\n  return _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, attributes, {\n    style: _reactNative.StyleSheet.flatten([styles.container, containerStyle && containerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    }\n  }), buttons.map(function (button, i) {\n    var isSelected = selectedIndex === i || selectedIndexes.includes(i);\n    var isDisabled = disabled === true || Array.isArray(disabled) && disabled.includes(i);\n    return _react.default.createElement(_reactNative.View, {\n      key: i,\n      style: _reactNative.StyleSheet.flatten([styles.button, i < buttons.length - 1 && {\n        borderRightWidth: i === 0 ? 0 : innerBorderWidth,\n        borderRightColor: innerBorderStyle && innerBorderStyle.color || theme.colors.grey4\n      }, i === 1 && {\n        borderLeftWidth: innerBorderWidth,\n        borderLeftColor: innerBorderStyle && innerBorderStyle.color || theme.colors.grey4\n      }, i === buttons.length - 1 && _objectSpread({}, lastBorderStyle, {\n        borderTopRightRadius: containerBorderRadius,\n        borderBottomRightRadius: containerBorderRadius\n      }), i === 0 && {\n        borderTopLeftRadius: containerBorderRadius,\n        borderBottomLeftRadius: containerBorderRadius\n      }]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      }\n    }, _react.default.createElement(Component, {\n      testID: \"buttonGroupItem\",\n      activeOpacity: activeOpacity,\n      setOpacityTo: setOpacityTo,\n      onHideUnderlay: onHideUnderlay,\n      onShowUnderlay: onShowUnderlay,\n      underlayColor: underlayColor,\n      disabled: isDisabled,\n      onPress: function onPress() {\n        if (selectMultiple) {\n          if (selectedIndexes.includes(i)) {\n            _onPress(selectedIndexes.filter(function (index) {\n              return index !== i;\n            }));\n          } else {\n            _onPress([].concat((0, _toConsumableArray2.default)(selectedIndexes), [i]));\n          }\n        } else {\n          _onPress(i);\n        }\n      },\n      style: styles.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      style: _reactNative.StyleSheet.flatten([styles.textContainer, buttonStyle && buttonStyle, isSelected && {\n        backgroundColor: theme.colors.primary\n      }, isSelected && selectedButtonStyle && selectedButtonStyle, isDisabled && styles.disabled, isDisabled && disabledStyle, isDisabled && isSelected && styles.disabledSelected(theme), isDisabled && isSelected && disabledSelectedStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      }\n    }, button.element ? _react.default.createElement(button.element, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      }\n    }) : _react.default.createElement(_Text.default, {\n      testID: \"buttonGroupItemText\",\n      style: _reactNative.StyleSheet.flatten([styles.buttonText(theme), textStyle && textStyle, isSelected && {\n        color: '#fff'\n      }, isSelected && selectedTextStyle, isDisabled && styles.disabledText(theme), isDisabled && disabledTextStyle, isDisabled && isSelected && disabledSelectedTextStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      }\n    }, button))));\n  }));\n};\n\nexports.ButtonGroup = ButtonGroup;\nvar styles = {\n  button: {\n    flex: 1\n  },\n  textContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    marginLeft: 10,\n    marginRight: 10,\n    marginBottom: 5,\n    marginTop: 5,\n    borderColor: '#e3e3e3',\n    borderWidth: 1,\n    flexDirection: 'row',\n    borderRadius: 3,\n    overflow: 'hidden',\n    backgroundColor: '#fff',\n    height: 40\n  },\n  buttonText: function buttonText(theme) {\n    return _objectSpread({\n      fontSize: (0, _helpers.normalizeText)(13),\n      color: theme.colors.grey2\n    }, _reactNative.Platform.select({\n      android: {},\n      default: {\n        fontWeight: '500'\n      }\n    }));\n  },\n  disabled: {\n    backgroundColor: 'transparent'\n  },\n  disabledText: function disabledText(theme) {\n    return {\n      color: (0, _helpers.color)(theme.colors.disabled).darken(0.3).toString()\n    };\n  },\n  disabledSelected: function disabledSelected(theme) {\n    return {\n      backgroundColor: theme.colors.disabled\n    };\n  }\n};\nButtonGroup.propTypes = {\n  button: _propTypes.default.object,\n  Component: _propTypes.default.elementType,\n  onPress: _propTypes.default.func,\n  buttons: _propTypes.default.array,\n  containerStyle: _config.ViewPropTypes.style,\n  textStyle: _reactNative.Text.propTypes.style,\n  selectedTextStyle: _reactNative.Text.propTypes.style,\n  selectedButtonStyle: _config.ViewPropTypes.style,\n  underlayColor: _propTypes.default.string,\n  selectedIndex: _propTypes.default.number,\n  selectedIndexes: _propTypes.default.arrayOf(_propTypes.default.number),\n  activeOpacity: _propTypes.default.number,\n  onHideUnderlay: _propTypes.default.func,\n  onShowUnderlay: _propTypes.default.func,\n  setOpacityTo: _propTypes.default.func,\n  innerBorderStyle: _propTypes.default.shape({\n    color: _propTypes.default.string,\n    width: _propTypes.default.number\n  }),\n  lastBorderStyle: _propTypes.default.oneOfType([_config.ViewPropTypes.style, _reactNative.Text.propTypes.style]),\n  buttonStyle: _config.ViewPropTypes.style,\n  containerBorderRadius: _propTypes.default.number,\n  selectMultiple: _propTypes.default.bool,\n  theme: _propTypes.default.object,\n  disabled: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.arrayOf(_propTypes.default.number)]),\n  disabledStyle: _config.ViewPropTypes.style,\n  disabledTextStyle: _reactNative.Text.propTypes.style,\n  disabledSelectedStyle: _config.ViewPropTypes.style,\n  disabledSelectedTextStyle: _reactNative.Text.propTypes.style\n};\nButtonGroup.defaultProps = {\n  selectedIndex: null,\n  selectedIndexes: [],\n  selectMultiple: false,\n  containerBorderRadius: 3,\n  disabled: false,\n  Component: _reactNative.Platform.select({\n    android: _reactNative.TouchableNativeFeedback,\n    default: _reactNative.TouchableOpacity\n  }),\n  onPress: function onPress() {\n    return null;\n  }\n};\n\nvar _default = (0, _config.withTheme)(ButtonGroup, 'ButtonGroup');\n\nexports.default = _default;","map":{"version":3,"sources":["C:/React/magic/node_modules/react-native-elements/src/buttons/ButtonGroup.js"],"names":["ButtonGroup","props","theme","rest","Component","buttons","onPress","selectedIndex","selectedIndexes","selectMultiple","containerStyle","innerBorderStyle","lastBorderStyle","buttonStyle","textStyle","selectedTextStyle","selectedButtonStyle","underlayColor","colors","primary","activeOpacity","onHideUnderlay","onShowUnderlay","setOpacityTo","containerBorderRadius","disabled","disabledStyle","disabledTextStyle","disabledSelectedStyle","disabledSelectedTextStyle","attributes","innerBorderWidth","Object","prototype","hasOwnProperty","call","width","StyleSheet","flatten","styles","container","map","button","i","isSelected","includes","isDisabled","Array","isArray","length","borderRightWidth","borderRightColor","color","grey4","borderLeftWidth","borderLeftColor","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","filter","index","textContainer","backgroundColor","disabledSelected","element","buttonText","disabledText","flex","justifyContent","alignItems","marginLeft","marginRight","marginBottom","marginTop","borderColor","borderWidth","flexDirection","borderRadius","overflow","height","fontSize","grey2","Platform","select","android","default","fontWeight","darken","toString","propTypes","PropTypes","object","elementType","func","array","ViewPropTypes","style","NativeText","string","number","arrayOf","shape","oneOfType","bool","defaultProps","TouchableNativeFeedback","TouchableOpacity"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  Text as NativeText,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  Platform,\n  StyleSheet,\n} from 'react-native';\n\nimport { ViewPropTypes, withTheme } from '../config';\nimport { normalizeText, color } from '../helpers';\n\nimport Text from '../text/Text';\n\nconst ButtonGroup = props => {\n  const { theme, ...rest } = props;\n\n  const {\n    Component,\n    buttons,\n    onPress,\n    selectedIndex,\n    selectedIndexes,\n    selectMultiple,\n    containerStyle,\n    innerBorderStyle,\n    lastBorderStyle,\n    buttonStyle,\n    textStyle,\n    selectedTextStyle,\n    selectedButtonStyle,\n    underlayColor = theme.colors.primary,\n    activeOpacity,\n    onHideUnderlay,\n    onShowUnderlay,\n    setOpacityTo,\n    containerBorderRadius,\n    disabled,\n    disabledStyle,\n    disabledTextStyle,\n    disabledSelectedStyle,\n    disabledSelectedTextStyle,\n    ...attributes\n  } = rest;\n\n  let innerBorderWidth = 1;\n\n  if (\n    innerBorderStyle &&\n    Object.prototype.hasOwnProperty.call(innerBorderStyle, 'width')\n  ) {\n    innerBorderWidth = innerBorderStyle.width;\n  }\n\n  return (\n    <View\n      {...attributes}\n      style={StyleSheet.flatten([\n        styles.container,\n        containerStyle && containerStyle,\n      ])}\n    >\n      {buttons.map((button, i) => {\n        const isSelected = selectedIndex === i || selectedIndexes.includes(i);\n        const isDisabled =\n          disabled === true ||\n          (Array.isArray(disabled) && disabled.includes(i));\n\n        return (\n          <View\n            key={i}\n            style={StyleSheet.flatten([\n              // FIXME: This is a workaround to the borderColor and borderRadius bug\n              // react-native ref: https://github.com/facebook/react-native/issues/8236\n              styles.button,\n              i < buttons.length - 1 && {\n                borderRightWidth: i === 0 ? 0 : innerBorderWidth,\n                borderRightColor:\n                  (innerBorderStyle && innerBorderStyle.color) ||\n                  theme.colors.grey4,\n              },\n              i === 1 && {\n                borderLeftWidth: innerBorderWidth,\n                borderLeftColor:\n                  (innerBorderStyle && innerBorderStyle.color) ||\n                  theme.colors.grey4,\n              },\n              i === buttons.length - 1 && {\n                ...lastBorderStyle,\n                borderTopRightRadius: containerBorderRadius,\n                borderBottomRightRadius: containerBorderRadius,\n              },\n              i === 0 && {\n                borderTopLeftRadius: containerBorderRadius,\n                borderBottomLeftRadius: containerBorderRadius,\n              },\n            ])}\n          >\n            <Component\n              testID=\"buttonGroupItem\"\n              activeOpacity={activeOpacity}\n              setOpacityTo={setOpacityTo}\n              onHideUnderlay={onHideUnderlay}\n              onShowUnderlay={onShowUnderlay}\n              underlayColor={underlayColor}\n              disabled={isDisabled}\n              onPress={() => {\n                if (selectMultiple) {\n                  if (selectedIndexes.includes(i)) {\n                    onPress(selectedIndexes.filter(index => index !== i));\n                  } else {\n                    onPress([...selectedIndexes, i]);\n                  }\n                } else {\n                  onPress(i);\n                }\n              }}\n              style={styles.button}\n            >\n              <View\n                style={StyleSheet.flatten([\n                  styles.textContainer,\n                  buttonStyle && buttonStyle,\n                  isSelected && {\n                    backgroundColor: theme.colors.primary,\n                  },\n                  isSelected && selectedButtonStyle && selectedButtonStyle,\n                  isDisabled && styles.disabled,\n                  isDisabled && disabledStyle,\n                  isDisabled && isSelected && styles.disabledSelected(theme),\n                  isDisabled && isSelected && disabledSelectedStyle,\n                ])}\n              >\n                {button.element ? (\n                  <button.element />\n                ) : (\n                  <Text\n                    testID=\"buttonGroupItemText\"\n                    style={StyleSheet.flatten([\n                      styles.buttonText(theme),\n                      textStyle && textStyle,\n                      isSelected && { color: '#fff' },\n                      isSelected && selectedTextStyle,\n                      isDisabled && styles.disabledText(theme),\n                      isDisabled && disabledTextStyle,\n                      isDisabled && isSelected && disabledSelectedTextStyle,\n                    ])}\n                  >\n                    {button}\n                  </Text>\n                )}\n              </View>\n            </Component>\n          </View>\n        );\n      })}\n    </View>\n  );\n};\n\nconst styles = {\n  button: {\n    flex: 1,\n  },\n  textContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  container: {\n    marginLeft: 10,\n    marginRight: 10,\n    marginBottom: 5,\n    marginTop: 5,\n    borderColor: '#e3e3e3',\n    borderWidth: 1,\n    flexDirection: 'row',\n    borderRadius: 3,\n    overflow: 'hidden',\n    backgroundColor: '#fff',\n    height: 40,\n  },\n  buttonText: theme => ({\n    fontSize: normalizeText(13),\n    color: theme.colors.grey2,\n    ...Platform.select({\n      android: {},\n      default: {\n        fontWeight: '500',\n      },\n    }),\n  }),\n  disabled: {\n    backgroundColor: 'transparent',\n  },\n  disabledText: theme => ({\n    color: color(theme.colors.disabled)\n      .darken(0.3)\n      .toString(),\n  }),\n  disabledSelected: theme => ({\n    backgroundColor: theme.colors.disabled,\n  }),\n};\n\nButtonGroup.propTypes = {\n  button: PropTypes.object,\n  Component: PropTypes.elementType,\n  onPress: PropTypes.func,\n  buttons: PropTypes.array,\n  containerStyle: ViewPropTypes.style,\n  textStyle: NativeText.propTypes.style,\n  selectedTextStyle: NativeText.propTypes.style,\n  selectedButtonStyle: ViewPropTypes.style,\n  underlayColor: PropTypes.string,\n  selectedIndex: PropTypes.number,\n  selectedIndexes: PropTypes.arrayOf(PropTypes.number),\n  activeOpacity: PropTypes.number,\n  onHideUnderlay: PropTypes.func,\n  onShowUnderlay: PropTypes.func,\n  setOpacityTo: PropTypes.func,\n  innerBorderStyle: PropTypes.shape({\n    color: PropTypes.string,\n    width: PropTypes.number,\n  }),\n  lastBorderStyle: PropTypes.oneOfType([\n    ViewPropTypes.style,\n    NativeText.propTypes.style,\n  ]),\n  buttonStyle: ViewPropTypes.style,\n  containerBorderRadius: PropTypes.number,\n  selectMultiple: PropTypes.bool,\n  theme: PropTypes.object,\n  disabled: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.arrayOf(PropTypes.number),\n  ]),\n  disabledStyle: ViewPropTypes.style,\n  disabledTextStyle: NativeText.propTypes.style,\n  disabledSelectedStyle: ViewPropTypes.style,\n  disabledSelectedTextStyle: NativeText.propTypes.style,\n};\n\nButtonGroup.defaultProps = {\n  selectedIndex: null,\n  selectedIndexes: [],\n  selectMultiple: false,\n  containerBorderRadius: 3,\n  disabled: false,\n  Component: Platform.select({\n    android: TouchableNativeFeedback,\n    default: TouchableOpacity,\n  }),\n  onPress: () => null,\n};\n\nexport { ButtonGroup };\nexport default withTheme(ButtonGroup, 'ButtonGroup');\n"]},"metadata":{},"sourceType":"script"}