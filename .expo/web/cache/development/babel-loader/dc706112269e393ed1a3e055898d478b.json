{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _invariant = _interopRequireDefault(require(\"../utils/invariant\"));\n\nvar _ScenesReducer = _interopRequireDefault(require(\"./ScenesReducer\"));\n\nvar _jsxFileName = \"C:\\\\React\\\\magic\\\\node_modules\\\\react-navigation-stack\\\\dist\\\\views\\\\Transitioner.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar DefaultTransitionSpec = {\n  duration: 250,\n  easing: _reactNative.Easing.inOut(_reactNative.Easing.ease),\n  timing: _reactNative.Animated.timing\n};\n\nvar Transitioner = function (_React$Component) {\n  (0, _inherits2.default)(Transitioner, _React$Component);\n\n  function Transitioner(props, context) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Transitioner);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Transitioner).call(this, props, context));\n\n    _this._onLayout = function (event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          height = _event$nativeEvent$la.height,\n          width = _event$nativeEvent$la.width;\n\n      if (_this.state.layout.initWidth === width && _this.state.layout.initHeight === height) {\n        return;\n      }\n\n      var layout = _objectSpread({}, _this.state.layout, {\n        initHeight: height,\n        initWidth: width,\n        isMeasured: true\n      });\n\n      layout.height.setValue(height);\n      layout.width.setValue(width);\n\n      var nextState = _objectSpread({}, _this.state, {\n        layout: layout\n      });\n\n      _this._transitionProps = buildTransitionProps(_this.props, nextState);\n\n      _this.setState(nextState);\n    };\n\n    _this._onTransitionEnd = function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var prevTransitionProps = _this._prevTransitionProps;\n      _this._prevTransitionProps = null;\n      var scenes = filterStale(_this.state.scenes);\n\n      var nextState = _objectSpread({}, _this.state, {\n        scenes: scenes\n      });\n\n      _this._transitionProps = buildTransitionProps(_this.props, nextState);\n\n      _this.setState(nextState, function _callee() {\n        var result;\n        return _regenerator.default.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!_this.props.onTransitionEnd) {\n                  _context.next = 5;\n                  break;\n                }\n\n                result = _this.props.onTransitionEnd(_this._transitionProps, prevTransitionProps);\n\n                if (!(result instanceof Promise)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 5;\n                return _regenerator.default.awrap(result);\n\n              case 5:\n                if (_this._queuedTransition) {\n                  _this._startTransition(_this._queuedTransition.nextProps, _this._queuedTransition.nextScenes, _this._queuedTransition.indexHasChanged);\n\n                  _this._queuedTransition = null;\n                } else {\n                  _this._isTransitionRunning = false;\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    };\n\n    var _layout = {\n      height: new _reactNative.Animated.Value(0),\n      initHeight: 0,\n      initWidth: 0,\n      isMeasured: false,\n      width: new _reactNative.Animated.Value(0)\n    };\n    _this.state = {\n      layout: _layout,\n      position: new _reactNative.Animated.Value(_this.props.navigation.state.index),\n      progress: new _reactNative.Animated.Value(1),\n      scenes: (0, _ScenesReducer.default)([], _this.props.navigation.state, null, _this.props.descriptors)\n    };\n    _this._prevTransitionProps = null;\n    _this._transitionProps = buildTransitionProps(props, _this.state);\n    _this._isMounted = false;\n    _this._isTransitionRunning = false;\n    _this._queuedTransition = null;\n    return _this;\n  }\n\n  (0, _createClass2.default)(Transitioner, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var nextScenes = (0, _ScenesReducer.default)(this.state.scenes, nextProps.navigation.state, this.props.navigation.state, nextProps.descriptors);\n\n      if (!nextProps.navigation.state.isTransitioning) {\n        nextScenes = filterStale(nextScenes);\n      }\n\n      if (nextProps.screenProps !== this.props.screenProps) {\n        this.setState({\n          nextScenes: nextScenes\n        });\n      }\n\n      if (nextScenes === this.state.scenes) {\n        return;\n      }\n\n      var indexHasChanged = nextProps.navigation.state.index !== this.props.navigation.state.index;\n\n      if (this._isTransitionRunning) {\n        this._queuedTransition = {\n          nextProps: nextProps,\n          nextScenes: nextScenes,\n          indexHasChanged: indexHasChanged\n        };\n        return;\n      }\n\n      this._startTransition(nextProps, nextScenes, indexHasChanged);\n    }\n  }, {\n    key: \"_startTransition\",\n    value: function _startTransition(nextProps, nextScenes, indexHasChanged) {\n      var _this2 = this;\n\n      var nextState = _objectSpread({}, this.state, {\n        scenes: nextScenes\n      });\n\n      var position = nextState.position,\n          progress = nextState.progress;\n      progress.setValue(0);\n      this._prevTransitionProps = this._transitionProps;\n      this._transitionProps = buildTransitionProps(nextProps, nextState);\n      var toValue = nextProps.navigation.state.index;\n\n      if (!this._transitionProps.navigation.state.isTransitioning) {\n        this.setState(nextState, function _callee2() {\n          var result;\n          return _regenerator.default.async(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  result = nextProps.onTransitionStart(_this2._transitionProps, _this2._prevTransitionProps);\n\n                  if (!(result instanceof Promise)) {\n                    _context2.next = 4;\n                    break;\n                  }\n\n                  _context2.next = 4;\n                  return _regenerator.default.awrap(result);\n\n                case 4:\n                  progress.setValue(1);\n                  position.setValue(toValue);\n\n                  _this2._onTransitionEnd();\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        });\n        return;\n      }\n\n      var transitionUserSpec = nextProps.configureTransition ? nextProps.configureTransition(this._transitionProps, this._prevTransitionProps) : null;\n\n      var transitionSpec = _objectSpread({}, DefaultTransitionSpec, {}, transitionUserSpec);\n\n      var timing = transitionSpec.timing;\n      delete transitionSpec.timing;\n      var positionHasChanged = position.__getValue() !== toValue;\n      var animations = indexHasChanged && positionHasChanged ? [timing(progress, _objectSpread({}, transitionSpec, {\n        toValue: 1\n      })), timing(position, _objectSpread({}, transitionSpec, {\n        toValue: nextProps.navigation.state.index\n      }))] : [];\n      this._isTransitionRunning = true;\n      this.setState(nextState, function _callee3() {\n        var result;\n        return _regenerator.default.async(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!nextProps.onTransitionStart) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                result = nextProps.onTransitionStart(_this2._transitionProps, _this2._prevTransitionProps);\n\n                if (!(result instanceof Promise)) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                _context3.next = 5;\n                return _regenerator.default.awrap(result);\n\n              case 5:\n                _reactNative.Animated.parallel(animations).start(_this2._onTransitionEnd);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_reactNative.View, {\n        onLayout: this._onLayout,\n        style: styles.main,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        }\n      }, this.props.render(this._transitionProps, this._prevTransitionProps));\n    }\n  }]);\n  return Transitioner;\n}(_react.default.Component);\n\nfunction buildTransitionProps(props, state) {\n  var navigation = props.navigation;\n  var layout = state.layout,\n      position = state.position,\n      progress = state.progress,\n      scenes = state.scenes;\n  var scene = scenes.find(isSceneActive);\n  (0, _invariant.default)(scene, 'Could not find active scene');\n  return {\n    layout: layout,\n    navigation: navigation,\n    position: position,\n    progress: progress,\n    scenes: scenes,\n    scene: scene,\n    index: scene.index\n  };\n}\n\nfunction isSceneNotStale(scene) {\n  return !scene.isStale;\n}\n\nfunction filterStale(scenes) {\n  var filtered = scenes.filter(isSceneNotStale);\n\n  if (filtered.length === scenes.length) {\n    return scenes;\n  }\n\n  return filtered;\n}\n\nfunction isSceneActive(scene) {\n  return scene.isActive;\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  main: {\n    flex: 1\n  }\n});\n\nvar _default = Transitioner;\nexports.default = _default;","map":{"version":3,"sources":["C:/React/magic/node_modules/react-navigation-stack/dist/views/Transitioner.js"],"names":["DefaultTransitionSpec","duration","easing","Easing","inOut","ease","timing","Animated","Transitioner","props","context","_onLayout","event","nativeEvent","layout","height","width","state","initWidth","initHeight","isMeasured","setValue","nextState","_transitionProps","buildTransitionProps","setState","_onTransitionEnd","_isMounted","prevTransitionProps","_prevTransitionProps","scenes","filterStale","onTransitionEnd","result","Promise","_queuedTransition","_startTransition","nextProps","nextScenes","indexHasChanged","_isTransitionRunning","Value","position","navigation","index","progress","descriptors","isTransitioning","screenProps","toValue","onTransitionStart","transitionUserSpec","configureTransition","transitionSpec","positionHasChanged","__getValue","animations","parallel","start","styles","main","render","React","Component","scene","find","isSceneActive","isSceneNotStale","isStale","filtered","filter","length","isActive","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Animated, Easing, StyleSheet, View } from 'react-native';\nimport invariant from '../utils/invariant';\n\nimport NavigationScenesReducer from './ScenesReducer';\n\n// Used for all animations unless overriden\nconst DefaultTransitionSpec = {\n  duration: 250,\n  easing: Easing.inOut(Easing.ease),\n  timing: Animated.timing\n};\n\nclass Transitioner extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    // The initial layout isn't measured. Measured layout will be only available\n    // when the component is mounted.\n    const layout = {\n      height: new Animated.Value(0),\n      initHeight: 0,\n      initWidth: 0,\n      isMeasured: false,\n      width: new Animated.Value(0)\n    };\n\n    this.state = {\n      layout,\n      position: new Animated.Value(this.props.navigation.state.index),\n      progress: new Animated.Value(1),\n      scenes: NavigationScenesReducer([], this.props.navigation.state, null, this.props.descriptors)\n    };\n\n    this._prevTransitionProps = null;\n    this._transitionProps = buildTransitionProps(props, this.state);\n    this._isMounted = false;\n    this._isTransitionRunning = false;\n    this._queuedTransition = null;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  // eslint-disable-next-line react/no-deprecated\n  componentWillReceiveProps(nextProps) {\n    let nextScenes = NavigationScenesReducer(this.state.scenes, nextProps.navigation.state, this.props.navigation.state, nextProps.descriptors);\n    if (!nextProps.navigation.state.isTransitioning) {\n      nextScenes = filterStale(nextScenes);\n    }\n\n    // Update nextScenes when we change screenProps\n    // This is a workaround for https://github.com/react-navigation/react-navigation/issues/4271\n    if (nextProps.screenProps !== this.props.screenProps) {\n      this.setState({ nextScenes });\n    }\n\n    if (nextScenes === this.state.scenes) {\n      return;\n    }\n\n    const indexHasChanged = nextProps.navigation.state.index !== this.props.navigation.state.index;\n    if (this._isTransitionRunning) {\n      this._queuedTransition = { nextProps, nextScenes, indexHasChanged };\n      return;\n    }\n\n    this._startTransition(nextProps, nextScenes, indexHasChanged);\n  }\n\n  _startTransition(nextProps, nextScenes, indexHasChanged) {\n    const nextState = {\n      ...this.state,\n      scenes: nextScenes\n    };\n\n    const { position, progress } = nextState;\n\n    progress.setValue(0);\n\n    this._prevTransitionProps = this._transitionProps;\n    this._transitionProps = buildTransitionProps(nextProps, nextState);\n\n    const toValue = nextProps.navigation.state.index;\n\n    if (!this._transitionProps.navigation.state.isTransitioning) {\n      this.setState(nextState, async () => {\n        const result = nextProps.onTransitionStart(this._transitionProps, this._prevTransitionProps);\n        if (result instanceof Promise) {\n          await result;\n        }\n        progress.setValue(1);\n        position.setValue(toValue);\n        this._onTransitionEnd();\n      });\n      return;\n    }\n\n    // get the transition spec.\n    const transitionUserSpec = nextProps.configureTransition ? nextProps.configureTransition(this._transitionProps, this._prevTransitionProps) : null;\n\n    const transitionSpec = {\n      ...DefaultTransitionSpec,\n      ...transitionUserSpec\n    };\n\n    const { timing } = transitionSpec;\n    delete transitionSpec.timing;\n\n    const positionHasChanged = position.__getValue() !== toValue;\n\n    // if swiped back, indexHasChanged == true && positionHasChanged == false\n    const animations = indexHasChanged && positionHasChanged ? [timing(progress, {\n      ...transitionSpec,\n      toValue: 1\n    }), timing(position, {\n      ...transitionSpec,\n      toValue: nextProps.navigation.state.index\n    })] : [];\n\n    // update scenes and play the transition\n    this._isTransitionRunning = true;\n    this.setState(nextState, async () => {\n      if (nextProps.onTransitionStart) {\n        const result = nextProps.onTransitionStart(this._transitionProps, this._prevTransitionProps);\n\n        if (result instanceof Promise) {\n          await result;\n        }\n      }\n      Animated.parallel(animations).start(this._onTransitionEnd);\n    });\n  }\n\n  render() {\n    return <View onLayout={this._onLayout} style={styles.main}>\n        {this.props.render(this._transitionProps, this._prevTransitionProps)}\n      </View>;\n  }\n\n  _onLayout = event => {\n    const { height, width } = event.nativeEvent.layout;\n    if (this.state.layout.initWidth === width && this.state.layout.initHeight === height) {\n      return;\n    }\n    const layout = {\n      ...this.state.layout,\n      initHeight: height,\n      initWidth: width,\n      isMeasured: true\n    };\n\n    layout.height.setValue(height);\n    layout.width.setValue(width);\n\n    const nextState = {\n      ...this.state,\n      layout\n    };\n\n    this._transitionProps = buildTransitionProps(this.props, nextState);\n    this.setState(nextState);\n  };\n\n  _onTransitionEnd = () => {\n    if (!this._isMounted) {\n      return;\n    }\n    const prevTransitionProps = this._prevTransitionProps;\n    this._prevTransitionProps = null;\n\n    const scenes = filterStale(this.state.scenes);\n\n    const nextState = {\n      ...this.state,\n      scenes\n    };\n\n    this._transitionProps = buildTransitionProps(this.props, nextState);\n\n    this.setState(nextState, async () => {\n      if (this.props.onTransitionEnd) {\n        const result = this.props.onTransitionEnd(this._transitionProps, prevTransitionProps);\n\n        if (result instanceof Promise) {\n          await result;\n        }\n      }\n\n      if (this._queuedTransition) {\n        this._startTransition(this._queuedTransition.nextProps, this._queuedTransition.nextScenes, this._queuedTransition.indexHasChanged);\n        this._queuedTransition = null;\n      } else {\n        this._isTransitionRunning = false;\n      }\n    });\n  };\n}\n\nfunction buildTransitionProps(props, state) {\n  const { navigation } = props;\n\n  const { layout, position, progress, scenes } = state;\n\n  const scene = scenes.find(isSceneActive);\n\n  invariant(scene, 'Could not find active scene');\n\n  return {\n    layout,\n    navigation,\n    position,\n    progress,\n    scenes,\n    scene,\n    index: scene.index\n  };\n}\n\nfunction isSceneNotStale(scene) {\n  return !scene.isStale;\n}\n\nfunction filterStale(scenes) {\n  const filtered = scenes.filter(isSceneNotStale);\n  if (filtered.length === scenes.length) {\n    return scenes;\n  }\n  return filtered;\n}\n\nfunction isSceneActive(scene) {\n  return scene.isActive;\n}\n\nconst styles = StyleSheet.create({\n  main: {\n    flex: 1\n  }\n});\n\nexport default Transitioner;"]},"metadata":{},"sourceType":"script"}