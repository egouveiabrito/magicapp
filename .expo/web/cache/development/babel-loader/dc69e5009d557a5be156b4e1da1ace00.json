{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = LazyImage;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _styles = require(\"../LazyImage/styles\");\n\nvar _jsxFileName = \"C:\\\\React\\\\magic\\\\src\\\\components\\\\LazyImage\\\\index.js\";\n\nvar AnimatedOriginal = _reactNative.Animated.createAnimatedComponent(_styles.Original);\n\nfunction LazyImage(_ref) {\n  var smallSource = _ref.smallSource,\n      source = _ref.source,\n      _ref$shouldLoad = _ref.shouldLoad,\n      shouldLoad = _ref$shouldLoad === void 0 ? false : _ref$shouldLoad,\n      _ref$aspectRatio = _ref.aspectRatio,\n      aspectRatio = _ref$aspectRatio === void 0 ? 1 : _ref$aspectRatio;\n  var opacity = new _reactNative.Animated.Value(0);\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    if (shouldLoad) {\n      setTimeout(function () {\n        setLoaded(true);\n      }, 1000);\n    }\n  }, [shouldLoad]);\n\n  function handleAnimate() {\n    _reactNative.Animated.timing(opacity, {\n      duration: 500,\n      toValue: 1,\n      useNativeDriver: true\n    }).start();\n  }\n\n  return _react.default.createElement(_reactNative.View, {\n    style: {\n      backgroundColor: 'red',\n      height: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    }\n  }, _react.default.createElement(_styles.Small, {\n    source: smallSource,\n    aspect: aspectRatio,\n    resizeMode: \"contain\",\n    blurRadius: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    }\n  }, loaded && _react.default.createElement(AnimatedOriginal, {\n    style: {\n      opacity: opacity\n    },\n    onLoadEnd: handleAnimate,\n    source: source,\n    aspect: aspectRatio,\n    resizeMode: \"contain\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    }\n  })));\n}","map":{"version":3,"sources":["C:/React/magic/src/components/LazyImage/index.js"],"names":["AnimatedOriginal","Animated","createAnimatedComponent","Original","LazyImage","smallSource","source","shouldLoad","aspectRatio","opacity","Value","loaded","setLoaded","setTimeout","handleAnimate","timing","duration","toValue","useNativeDriver","start","backgroundColor","height"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,gBAAgB,GAAGC,sBAASC,uBAAT,CAAiCC,gBAAjC,CAAzB;;AAEe,SAASC,SAAT,OAKZ;AAAA,MAJDC,WAIC,QAJDA,WAIC;AAAA,MAHDC,MAGC,QAHDA,MAGC;AAAA,6BAFDC,UAEC;AAAA,MAFDA,UAEC,gCAFY,KAEZ;AAAA,8BADDC,WACC;AAAA,MADDA,WACC,iCADa,CACb;AACD,MAAMC,OAAO,GAAG,IAAIR,sBAASS,KAAb,CAAmB,CAAnB,CAAhB;;AADC,kBAG2B,qBAAS,KAAT,CAH3B;AAAA;AAAA,MAGMC,MAHN;AAAA,MAGcC,SAHd;;AAKD,wBAAU,YAAM;AACd,QAAIL,UAAJ,EAAgB;AACdM,MAAAA,UAAU,CAAC,YAAM;AACfD,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GAND,EAMG,CAACL,UAAD,CANH;;AAQA,WAASO,aAAT,GAAyB;AACvBb,0BAASc,MAAT,CAAgBN,OAAhB,EAAyB;AACvBO,MAAAA,QAAQ,EAAE,GADa;AAEvBC,MAAAA,OAAO,EAAE,CAFc;AAGvBC,MAAAA,eAAe,EAAE;AAHM,KAAzB,EAIGC,KAJH;AAKD;;AAED,SACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAC,KAAjB;AAAwBC,MAAAA,MAAM,EAAC;AAA/B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,6BAAC,aAAD;AACE,IAAA,MAAM,EAAEhB,WADV;AAEE,IAAA,MAAM,EAAEG,WAFV;AAGE,IAAA,UAAU,EAAC,SAHb;AAIE,IAAA,UAAU,EAAE,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA,KAMIG,MAAM,IACN,6BAAC,gBAAD;AACE,IAAA,KAAK,EAAE;AAAEF,MAAAA,OAAO,EAAPA;AAAF,KADT;AAEE,IAAA,SAAS,EAAEK,aAFb;AAGE,IAAA,MAAM,EAAER,MAHV;AAIE,IAAA,MAAM,EAAEE,WAJV;AAKE,IAAA,UAAU,EAAC,SALb;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADA,CADF;AAoBD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport { Small, Original } from '../LazyImage/styles';\n\nconst AnimatedOriginal = Animated.createAnimatedComponent(Original);\n\nexport default function LazyImage({\n  smallSource,\n  source,\n  shouldLoad = false,\n  aspectRatio = 1,\n}) {\n  const opacity = new Animated.Value(0);\n\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    if (shouldLoad) {\n      setTimeout(() => {\n        setLoaded(true);\n      }, 1000);\n    }\n  }, [shouldLoad])\n\n  function handleAnimate() {\n    Animated.timing(opacity, {\n      duration: 500,\n      toValue: 1,\n      useNativeDriver: true, \n    }).start();\n  }\n\n  return (\n    <View style={{backgroundColor:'red', height:50}}>\n    <Small \n      source={smallSource}\n      aspect={aspectRatio}\n      resizeMode=\"contain\"\n      blurRadius={3}\n    >\n      { loaded && (\n        <AnimatedOriginal \n          style={{ opacity }}\n          onLoadEnd={handleAnimate}\n          source={source} \n          aspect={aspectRatio} \n          resizeMode=\"contain\"\n        />\n      ) }\n    </Small>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}