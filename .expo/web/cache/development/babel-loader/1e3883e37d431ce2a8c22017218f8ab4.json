{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Search;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _api = _interopRequireDefault(require(\"../services/api\"));\n\nvar _util = _interopRequireDefault(require(\"../Util/util\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _LazyImage = _interopRequireDefault(require(\"../components/LazyImage\"));\n\nvar _styled = require(\"../components/Search/styled\");\n\nvar _jsxFileName = \"C:\\\\React\\\\magic\\\\src\\\\pages\\\\Search.js\";\n\nvar styles = require('../pages/styles');\n\nvar AnimatedTouchable = _reactNative.Animated.createAnimatedComponent(_reactNative.TouchableOpacity);\n\nfunction Search() {\n  var _this = this;\n\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      docs = _useState2[0],\n      setDocs = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(1),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      total = _useState6[0],\n      setTotal = _useState6[1];\n\n  var _useState7 = (0, _react.useState)([]),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      viewable = _useState8[0],\n      setViewable = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(false),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  (0, _react.useEffect)(function () {\n    loadPage();\n  }, []);\n\n  function validadeJson(Info) {\n    try {\n      var Cards = new Array();\n\n      for (var index = 0; index < Info.data.length; index++) {\n        Cards.push({\n          _id: Info.data[index].id,\n          title: Info.data[index].name + ' - ' + Info.data[index].type_line,\n          url: Info.data[index].image_uris == undefined ? 'https://www.buritama.sp.leg.br/imagens/parlamentares-2013-2016/sem-foto.jpg/image' : Info.data[index].image_uris.normal,\n          description: Info.data[index].oracle_text\n        });\n      }\n\n      return Cards;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function loadPage() {\n    var pageNumber,\n        shouldRefresh,\n        response,\n        data,\n        _args = arguments;\n    return _regenerator.default.async(function loadPage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            pageNumber = _args.length > 0 && _args[0] !== undefined ? _args[0] : page;\n            shouldRefresh = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;\n\n            if (!(pageNumber === total)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 4:\n            if (!loading) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 6:\n            setLoading(true);\n            _context.prev = 7;\n            _context.next = 10;\n            return _regenerator.default.awrap(_api.default.get('/cards?page=' + page));\n\n          case 10:\n            response = _context.sent;\n            data = validadeJson(response.data);\n            setLoading(false);\n            setTotal(Math.floor(data.length / 4));\n            setPage(pageNumber + 1);\n            setDocs(shouldRefresh ? data : [].concat((0, _toConsumableArray2.default)(docs), (0, _toConsumableArray2.default)(data)));\n            _context.next = 21;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](7);\n            console.log(_context.t0.message);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[7, 18]], Promise);\n  }\n\n  function search(search) {\n    var response, data;\n    return _regenerator.default.async(function search$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(search.length <= 3)) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            _context2.prev = 2;\n            _context2.next = 5;\n            return _regenerator.default.awrap(_api.default.get('/cards/search?q=' + search));\n\n          case 5:\n            response = _context2.sent;\n            data = validadeJson(response.data);\n            setTotal(Math.floor(data.length / 4));\n            setPage(1);\n            setDocs(data);\n            _context2.next = 15;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](2);\n            console.log(_context2.t0.message);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 12]], Promise);\n  }\n\n  function refreshList() {\n    return _regenerator.default.async(function refreshList$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setRefreshing(true);\n            _context3.next = 3;\n            return _regenerator.default.awrap(loadPage(1, true));\n\n          case 3:\n            setRefreshing(false);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var handleViewableChanged = (0, _react.useCallback)(function (_ref) {\n    var changed = _ref.changed;\n\n    try {\n      setViewable(changed.map(function (_ref2) {\n        var item = _ref2.item;\n        return item._id;\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.searchContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    }\n  }, _react.default.createElement(_reactNative.Animated.View, {\n    style: [styles.search, {\n      width: inputLength,\n      position: \"absolute\",\n      left: 16,\n      alignSelf: \"center\"\n    }, searchBarFocused === true ? undefined : {\n      justifyContent: \"center\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    style: styles.searchInput,\n    onBlur: _util.default.onBlur,\n    onFocus: _util.default.onFocus,\n    onChangeText: search.bind(this),\n    placeholder: \"Type something\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    }\n  })), _react.default.createElement(AnimatedTouchable, {\n    style: [styles.cancelSearch, {\n      right: cancelPosition\n    }],\n    onPress: function onPress() {\n      return null;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    }\n  }, _react.default.createElement(_reactNative.Animated.Text, {\n    style: [styles.cancelSearchText, {\n      opacity: opacity\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    }\n  }))), _react.default.createElement(_reactNative.FlatList, {\n    key: \"list\",\n    data: docs,\n    keyExtractor: function keyExtractor(item) {\n      return String(item._id);\n    },\n    onViewableItemsChanged: handleViewableChanged,\n    viewabilityConfig: {\n      viewAreaCoveragePercentThreshold: 10,\n      minimumViewTime: 500\n    },\n    showsVerticalScrollIndicator: false,\n    onRefresh: refreshList,\n    refreshing: refreshing,\n    onEndReachedThreshold: 0.1,\n    onEndReached: function onEndReached() {\n      return loadPage();\n    },\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return _react.default.createElement(_styled.Post, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        }\n      }, _react.default.createElement(_styled.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        }\n      }, _react.default.createElement(_styled.Avatar, {\n        source: {\n          uri: item.url\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        }\n      }), _react.default.createElement(_styled.Name, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        }\n      }, item.title)), _react.default.createElement(_LazyImage.default, {\n        aspectRatio: 0.834,\n        shouldLoad: viewable.includes(item._id),\n        smallSource: {\n          uri: item.url\n        },\n        source: {\n          uri: item.url\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        }\n      }), _react.default.createElement(_styled.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        }\n      }, _react.default.createElement(_styled.Name, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        }\n      }, item.type_line), \" \", item.description), _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: styles.productsButton,\n        onPress: function onPress() {\n          _this.props.navigation.navigate('Card');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.productsButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        }\n      }, \"Add\")));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    }\n  }));\n}","map":{"version":3,"sources":["C:/React/magic/src/pages/Search.js"],"names":["styles","require","AnimatedTouchable","Animated","createAnimatedComponent","TouchableOpacity","Search","docs","setDocs","page","setPage","total","setTotal","viewable","setViewable","loading","setLoading","loadPage","validadeJson","Info","Cards","Array","index","data","length","push","_id","id","title","name","type_line","url","image_uris","undefined","normal","description","oracle_text","error","console","log","pageNumber","shouldRefresh","api","get","response","Math","floor","message","search","refreshList","setRefreshing","handleViewableChanged","changed","map","item","container","searchContainer","width","inputLength","position","left","alignSelf","searchBarFocused","justifyContent","searchInput","util","onBlur","onFocus","bind","cancelSearch","right","cancelPosition","cancelSearchText","opacity","String","viewAreaCoveragePercentThreshold","minimumViewTime","refreshing","uri","includes","productsButton","props","navigation","navigate","productsButtonText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport api from '../services/api';\r\nimport util from '../Util/util';\r\n\r\nimport { View, Text, TouchableOpacity, TextInput, Animated, FlatList } from 'react-native';\r\nvar styles = require('../pages/styles');\r\nimport LazyImage from '../components/LazyImage';\r\nimport { Post, Header, Avatar, Name, Description, Start } from '../components/Search/styled';\r\n\r\n\r\n\r\nconst AnimatedTouchable = Animated.createAnimatedComponent(TouchableOpacity);\r\n\r\n\r\nexport default function Search() {\r\n    \r\n        const [docs, setDocs] = useState([]);\r\n        const [page, setPage] = useState(1);\r\n        const [total, setTotal] = useState(0);\r\n        const [viewable, setViewable] = useState([]);\r\n        const [loading, setLoading] = useState(false);\r\n\r\n\r\n        useEffect(() => { loadPage() }, []);\r\n\r\n        function validadeJson(Info){\r\n        try {\r\n            var Cards = new Array();\r\n            for (let index = 0; index < Info.data.length; index++) {\r\n                Cards.push( {\r\n                    _id: Info.data[index].id,\r\n                    title: Info.data[index].name + ' - ' + Info.data[index].type_line,\r\n                    url: Info.data[index].image_uris == undefined ? 'https://www.buritama.sp.leg.br/imagens/parlamentares-2013-2016/sem-foto.jpg/image' :\r\n                        Info.data[index].image_uris.normal,\r\n                    description: Info.data[index].oracle_text\r\n                });\r\n            }\r\n           return Cards;\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        }\r\n\r\n        async function loadPage(pageNumber = page, shouldRefresh = false) {\r\n\r\n            if (pageNumber === total) return;\r\n            if (loading) return;\r\n\r\n            setLoading(true);\r\n\r\n            try {\r\n                const response = await api.get('/cards?page=' + page);\r\n                const data = validadeJson(response.data);\r\n\r\n                setLoading(false);\r\n                setTotal(Math.floor(data.length / 4));\r\n                setPage(pageNumber + 1);\r\n                setDocs(shouldRefresh ? data : [...docs, ...data]);\r\n\r\n            } catch (error) {\r\n                console.log(error.message);\r\n            }\r\n        }\r\n\r\n        async function search(search) {\r\n            \r\n            if (search.length <= 3) return;\r\n\r\n        try {\r\n\r\n            const response = await api.get('/cards/search?q=' + search);\r\n            const data = validadeJson(response.data);\r\n            \r\n            setTotal(Math.floor(data.length / 4));\r\n            setPage(1);\r\n            setDocs(data);\r\n\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n        }\r\n\r\n        async function refreshList() {\r\n            setRefreshing(true);\r\n\r\n            await loadPage(1, true);\r\n\r\n            setRefreshing(false);\r\n        }\r\n\r\n        const handleViewableChanged = useCallback(({ changed }) => {\r\n                try {\r\n                    setViewable(changed.map(({ item }) => item._id));\r\n\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n        \r\n        }, []);\r\n\r\n        \r\n    return (\r\n                <View style={styles.container}>\r\n                    <View style={styles.searchContainer}>\r\n                        <Animated.View\r\n                            style={[\r\n                                styles.search,\r\n                                {\r\n                                    width: inputLength,\r\n                                    position: \"absolute\",\r\n                                    left: 16,\r\n                                    alignSelf: \"center\"\r\n                                },\r\n                                searchBarFocused === true ? undefined : { justifyContent: \"center\" }\r\n                            ]}\r\n                        >\r\n                            <TextInput\r\n                                style={styles.searchInput}\r\n                                onBlur={util.onBlur}\r\n                                onFocus={util.onFocus}\r\n                                onChangeText={search.bind(this)}\r\n                                placeholder=\"Type something\"\r\n                            />\r\n                        </Animated.View>\r\n\r\n                        <AnimatedTouchable\r\n                            style={[styles.cancelSearch, { right: cancelPosition }]}\r\n                            onPress={() => null}>\r\n\r\n                            <Animated.Text\r\n                                style={[styles.cancelSearchText, { opacity: opacity }]}>\r\n                            </Animated.Text>\r\n\r\n                        </AnimatedTouchable>\r\n                    </View>\r\n\r\n               <FlatList\r\n                    key=\"list\"\r\n                    data={docs}\r\n                    keyExtractor={item => String(item._id)}\r\n                    onViewableItemsChanged={handleViewableChanged}\r\n                    viewabilityConfig={{\r\n                        viewAreaCoveragePercentThreshold: 10,\r\n                        minimumViewTime: 500,\r\n                    }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    onRefresh={refreshList}\r\n                    refreshing={refreshing}\r\n                    onEndReachedThreshold={0.1}\r\n                    onEndReached={() => loadPage()}\r\n                    renderItem={({ item }) => (\r\n                        <Post>\r\n                            <Header>\r\n                                <Avatar source={{ uri: item.url }} />\r\n                                <Name>{item.title}</Name>\r\n                            </Header>\r\n    \r\n                            <LazyImage \r\n                                aspectRatio={0.834}\r\n                                shouldLoad={viewable.includes(item._id)}\r\n                                smallSource={{ uri: item.url }}\r\n                                source={{ uri: item.url }}\r\n                            />    \r\n                            <Description>\r\n                                <Name>{item.type_line}</Name> {item.description}\r\n                            </Description>\r\n                            <TouchableOpacity\r\n                                style={styles.productsButton}\r\n                                onPress={() => {\r\n                                    this.props.navigation.navigate('Card');\r\n                                }}>\r\n                                <Text style={styles.productsButtonText}>Add</Text>\r\n\r\n                            </TouchableOpacity>\r\n                        </Post>\r\n                )}\r\n            />\r\n    </View>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"script"}