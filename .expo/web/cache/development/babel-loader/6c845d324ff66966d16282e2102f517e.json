{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeScreens = require(\"react-native-screens\");\n\nvar _createPointerEventsContainer = _interopRequireDefault(require(\"./createPointerEventsContainer\"));\n\nvar _jsxFileName = \"C:\\\\React\\\\magic\\\\node_modules\\\\react-navigation-stack\\\\dist\\\\views\\\\StackView\\\\StackViewCard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar EPS = 1e-5;\n\nfunction getAccessibilityProps(isActive) {\n  if (_reactNative.Platform.OS === 'ios') {\n    return {\n      accessibilityElementsHidden: !isActive\n    };\n  } else if (_reactNative.Platform.OS === 'android') {\n    return {\n      importantForAccessibility: isActive ? 'yes' : 'no-hide-descendants'\n    };\n  } else {\n    return null;\n  }\n}\n\nvar Card = function (_React$Component) {\n  (0, _inherits2.default)(Card, _React$Component);\n\n  function Card() {\n    (0, _classCallCheck2.default)(this, Card);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Card).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          pointerEvents = _this$props.pointerEvents,\n          style = _this$props.style,\n          position = _this$props.position,\n          transparent = _this$props.transparent,\n          _this$props$scene = _this$props.scene,\n          index = _this$props$scene.index,\n          isActive = _this$props$scene.isActive;\n      var active = transparent || isActive ? 1 : position.interpolate({\n        inputRange: [index, index + 1 - EPS, index + 1],\n        outputRange: [1, 1, 0],\n        extrapolate: 'clamp'\n      });\n      return _react.default.createElement(_reactNativeScreens.Screen, (0, _extends2.default)({\n        pointerEvents: pointerEvents,\n        onComponentRef: this.props.onComponentRef,\n        style: [transparent ? styles.transparent : styles.main, style],\n        active: active\n      }, getAccessibilityProps(isActive), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        }\n      }), children);\n    }\n  }]);\n  return Card;\n}(_react.default.Component);\n\nvar styles = _reactNative.StyleSheet.create({\n  main: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject, {\n    backgroundColor: '#E9E9EF',\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 5\n  }),\n  transparent: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject, {\n    backgroundColor: 'transparent'\n  })\n});\n\nvar _default = (0, _createPointerEventsContainer.default)(Card);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/React/magic/node_modules/react-navigation-stack/dist/views/StackView/StackViewCard.js"],"names":["EPS","getAccessibilityProps","isActive","Platform","OS","accessibilityElementsHidden","importantForAccessibility","Card","props","children","pointerEvents","style","position","transparent","scene","index","active","interpolate","inputRange","outputRange","extrapolate","onComponentRef","styles","main","React","Component","StyleSheet","create","absoluteFillObject","backgroundColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,GAAG,GAAG,IAAZ;;AAEA,SAASC,qBAAT,CAA+BC,QAA/B,EAAyC;AACvC,MAAIC,sBAASC,EAAT,KAAgB,KAApB,EAA2B;AACzB,WAAO;AACLC,MAAAA,2BAA2B,EAAE,CAACH;AADzB,KAAP;AAGD,GAJD,MAIO,IAAIC,sBAASC,EAAT,KAAgB,SAApB,EAA+B;AACpC,WAAO;AACLE,MAAAA,yBAAyB,EAAEJ,QAAQ,GAAG,KAAH,GAAW;AADzC,KAAP;AAGD,GAJM,MAIA;AACL,WAAO,IAAP;AACD;AACF;;IAKKK,I;;;;;;;;;;6BACK;AAAA,wBAQH,KAAKC,KARF;AAAA,UAELC,QAFK,eAELA,QAFK;AAAA,UAGLC,aAHK,eAGLA,aAHK;AAAA,UAILC,KAJK,eAILA,KAJK;AAAA,UAKLC,QALK,eAKLA,QALK;AAAA,UAMLC,WANK,eAMLA,WANK;AAAA,0CAOLC,KAPK;AAAA,UAOIC,KAPJ,qBAOIA,KAPJ;AAAA,UAOWb,QAPX,qBAOWA,QAPX;AAUP,UAAMc,MAAM,GAAGH,WAAW,IAAIX,QAAf,GAA0B,CAA1B,GAA8BU,QAAQ,CAACK,WAAT,CAAqB;AAChEC,QAAAA,UAAU,EAAE,CAACH,KAAD,EAAQA,KAAK,GAAG,CAAR,GAAYf,GAApB,EAAyBe,KAAK,GAAG,CAAjC,CADoD;AAEhEI,QAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFmD;AAGhEC,QAAAA,WAAW,EAAE;AAHmD,OAArB,CAA7C;AAMA,aAAO,6BAAC,0BAAD;AAAQ,QAAA,aAAa,EAAEV,aAAvB;AAAsC,QAAA,cAAc,EAAE,KAAKF,KAAL,CAAWa,cAAjE;AAAiF,QAAA,KAAK,EAAE,CAACR,WAAW,GAAGS,MAAM,CAACT,WAAV,GAAwBS,MAAM,CAACC,IAA3C,EAAiDZ,KAAjD,CAAxF;AAAiJ,QAAA,MAAM,EAAEK;AAAzJ,SAAqKf,qBAAqB,CAACC,QAAD,CAA1L;AAAA;AAAA;AAAA;AAAA;AAAA,UACFO,QADE,CAAP;AAGD;;;EApBgBe,eAAMC,S;;AAuBzB,IAAMH,MAAM,GAAGI,wBAAWC,MAAX,CAAkB;AAC/BJ,EAAAA,IAAI,oBACCG,wBAAWE,kBADZ;AAEFC,IAAAA,eAAe,EAAE,SAFf;AAGFC,IAAAA,WAAW,EAAE,OAHX;AAIFC,IAAAA,YAAY,EAAE;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAJZ;AAKFC,IAAAA,aAAa,EAAE,GALb;AAMFC,IAAAA,YAAY,EAAE;AANZ,IAD2B;AAS/BtB,EAAAA,WAAW,oBACNa,wBAAWE,kBADL;AAETC,IAAAA,eAAe,EAAE;AAFR;AAToB,CAAlB,CAAf;;eAee,2CAA6BtB,IAA7B,C","sourcesContent":["import React from 'react';\nimport { StyleSheet, Platform } from 'react-native';\nimport { Screen } from 'react-native-screens';\nimport createPointerEventsContainer from './createPointerEventsContainer';\n\nconst EPS = 1e-5;\n\nfunction getAccessibilityProps(isActive) {\n  if (Platform.OS === 'ios') {\n    return {\n      accessibilityElementsHidden: !isActive\n    };\n  } else if (Platform.OS === 'android') {\n    return {\n      importantForAccessibility: isActive ? 'yes' : 'no-hide-descendants'\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * Component that renders the scene as card for the <StackView />.\n */\nclass Card extends React.Component {\n  render() {\n    const {\n      children,\n      pointerEvents,\n      style,\n      position,\n      transparent,\n      scene: { index, isActive }\n    } = this.props;\n\n    const active = transparent || isActive ? 1 : position.interpolate({\n      inputRange: [index, index + 1 - EPS, index + 1],\n      outputRange: [1, 1, 0],\n      extrapolate: 'clamp'\n    });\n\n    return <Screen pointerEvents={pointerEvents} onComponentRef={this.props.onComponentRef} style={[transparent ? styles.transparent : styles.main, style]} active={active} {...getAccessibilityProps(isActive)}>\n        {children}\n      </Screen>;\n  }\n}\n\nconst styles = StyleSheet.create({\n  main: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: '#E9E9EF',\n    shadowColor: 'black',\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0.2,\n    shadowRadius: 5\n  },\n  transparent: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'transparent'\n  }\n});\n\nexport default createPointerEventsContainer(Card);"]},"metadata":{},"sourceType":"script"}