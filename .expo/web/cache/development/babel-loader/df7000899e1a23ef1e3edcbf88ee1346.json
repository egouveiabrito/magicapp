{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createPointerEventsContainer;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _invariant = _interopRequireDefault(require(\"../../utils/invariant\"));\n\nvar _jsxFileName = \"C:\\\\React\\\\magic\\\\node_modules\\\\react-navigation-stack\\\\dist\\\\views\\\\StackView\\\\createPointerEventsContainer.js\";\nvar MIN_POSITION_OFFSET = 0.01;\n\nfunction createPointerEventsContainer(Component) {\n  var Container = function (_React$Component) {\n    (0, _inherits2.default)(Container, _React$Component);\n\n    function Container(props, context) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, Container);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Container).call(this, props, context));\n\n      _this._onComponentRef = function (component) {\n        _this._component = component;\n\n        if (component) {\n          (0, _invariant.default)(typeof component.setNativeProps === 'function', 'component must implement method `setNativeProps`');\n        }\n      };\n\n      _this._onPositionChange = function () {\n        if (_this._component) {\n          var pointerEvents = _this._computePointerEvents();\n\n          if (_this._pointerEvents !== pointerEvents) {\n            _this._pointerEvents = pointerEvents;\n\n            _this._component.setNativeProps({\n              pointerEvents: pointerEvents\n            });\n          }\n        }\n      };\n\n      _this._pointerEvents = _this._computePointerEvents();\n      return _this;\n    }\n\n    (0, _createClass2.default)(Container, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this._positionListener && this._positionListener.remove();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        this._bindPosition();\n\n        this._pointerEvents = this._computePointerEvents();\n        return _react.default.createElement(Component, (0, _extends2.default)({}, this.props, {\n          pointerEvents: this._pointerEvents,\n          onComponentRef: this._onComponentRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          }\n        }));\n      }\n    }, {\n      key: \"_bindPosition\",\n      value: function _bindPosition() {\n        this._positionListener && this._positionListener.remove();\n        this._positionListener = new AnimatedValueSubscription(this.props.position, this._onPositionChange);\n      }\n    }, {\n      key: \"_computePointerEvents\",\n      value: function _computePointerEvents() {\n        var _this$props = this.props,\n            navigation = _this$props.navigation,\n            position = _this$props.position,\n            scene = _this$props.scene;\n\n        if (scene.isStale || navigation.state.index !== scene.index) {\n          return scene.index > navigation.state.index ? 'box-only' : 'none';\n        }\n\n        var offset = position.__getAnimatedValue() - navigation.state.index;\n\n        if (Math.abs(offset) > MIN_POSITION_OFFSET) {\n          return 'box-only';\n        }\n\n        return 'auto';\n      }\n    }]);\n    return Container;\n  }(_react.default.Component);\n\n  return Container;\n}\n\nvar AnimatedValueSubscription = function () {\n  function AnimatedValueSubscription(value, callback) {\n    (0, _classCallCheck2.default)(this, AnimatedValueSubscription);\n    this._value = value;\n    this._token = value.addListener(callback);\n  }\n\n  (0, _createClass2.default)(AnimatedValueSubscription, [{\n    key: \"remove\",\n    value: function remove() {\n      this._value.removeListener(this._token);\n    }\n  }]);\n  return AnimatedValueSubscription;\n}();","map":{"version":3,"sources":["C:/React/magic/node_modules/react-navigation-stack/dist/views/StackView/createPointerEventsContainer.js"],"names":["MIN_POSITION_OFFSET","createPointerEventsContainer","Component","Container","props","context","_onComponentRef","component","_component","setNativeProps","_onPositionChange","pointerEvents","_computePointerEvents","_pointerEvents","_positionListener","remove","_bindPosition","AnimatedValueSubscription","position","navigation","scene","isStale","state","index","offset","__getAnimatedValue","Math","abs","React","value","callback","_value","_token","addListener","removeListener"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;AAEA,IAAMA,mBAAmB,GAAG,IAA5B;;AAOe,SAASC,4BAAT,CAAsCC,SAAtC,EAAiD;AAAA,MACxDC,SADwD;AAAA;;AAE5D,uBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;AAC1B,iHAAMD,KAAN,EAAaC,OAAb;;AAD0B,YAgB5BC,eAhB4B,GAgBV,UAAAC,SAAS,EAAI;AAC7B,cAAKC,UAAL,GAAkBD,SAAlB;;AACA,YAAIA,SAAJ,EAAe;AACb,kCAAU,OAAOA,SAAS,CAACE,cAAjB,KAAoC,UAA9C,EAA0D,kDAA1D;AACD;AACF,OArB2B;;AAAA,YA4B5BC,iBA5B4B,GA4BR,YAAM;AACxB,YAAI,MAAKF,UAAT,EAAqB;AACnB,cAAMG,aAAa,GAAG,MAAKC,qBAAL,EAAtB;;AACA,cAAI,MAAKC,cAAL,KAAwBF,aAA5B,EAA2C;AACzC,kBAAKE,cAAL,GAAsBF,aAAtB;;AACA,kBAAKH,UAAL,CAAgBC,cAAhB,CAA+B;AAAEE,cAAAA,aAAa,EAAbA;AAAF,aAA/B;AACD;AACF;AACF,OApC2B;;AAE1B,YAAKE,cAAL,GAAsB,MAAKD,qBAAL,EAAtB;AAF0B;AAG3B;;AAL2D;AAAA;AAAA,6CAOrC;AACrB,aAAKE,iBAAL,IAA0B,KAAKA,iBAAL,CAAuBC,MAAvB,EAA1B;AACD;AAT2D;AAAA;AAAA,+BAWnD;AACP,aAAKC,aAAL;;AACA,aAAKH,cAAL,GAAsB,KAAKD,qBAAL,EAAtB;AAEA,eAAO,6BAAC,SAAD,6BAAe,KAAKR,KAApB;AAA2B,UAAA,aAAa,EAAE,KAAKS,cAA/C;AAA+D,UAAA,cAAc,EAAE,KAAKP,eAApF;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD;AAhB2D;AAAA;AAAA,sCAyB5C;AACd,aAAKQ,iBAAL,IAA0B,KAAKA,iBAAL,CAAuBC,MAAvB,EAA1B;AACA,aAAKD,iBAAL,GAAyB,IAAIG,yBAAJ,CAA8B,KAAKb,KAAL,CAAWc,QAAzC,EAAmD,KAAKR,iBAAxD,CAAzB;AACD;AA5B2D;AAAA;AAAA,8CAwCpC;AAAA,0BACkB,KAAKN,KADvB;AAAA,YACde,UADc,eACdA,UADc;AAAA,YACFD,QADE,eACFA,QADE;AAAA,YACQE,KADR,eACQA,KADR;;AAGtB,YAAIA,KAAK,CAACC,OAAN,IAAiBF,UAAU,CAACG,KAAX,CAAiBC,KAAjB,KAA2BH,KAAK,CAACG,KAAtD,EAA6D;AAE3D,iBAAOH,KAAK,CAACG,KAAN,GAAcJ,UAAU,CAACG,KAAX,CAAiBC,KAA/B,GAAuC,UAAvC,GAAoD,MAA3D;AACD;;AAED,YAAMC,MAAM,GAAGN,QAAQ,CAACO,kBAAT,KAAgCN,UAAU,CAACG,KAAX,CAAiBC,KAAhE;;AACA,YAAIG,IAAI,CAACC,GAAL,CAASH,MAAT,IAAmBxB,mBAAvB,EAA4C;AAI1C,iBAAO,UAAP;AACD;;AAED,eAAO,MAAP;AACD;AAzD2D;AAAA;AAAA,IACtC4B,eAAM1B,SADgC;;AA2D9D,SAAOC,SAAP;AACD;;IAEKc,yB;AACJ,qCAAYY,KAAZ,EAAmBC,QAAnB,EAA6B;AAAA;AAC3B,SAAKC,MAAL,GAAcF,KAAd;AACA,SAAKG,MAAL,GAAcH,KAAK,CAACI,WAAN,CAAkBH,QAAlB,CAAd;AACD;;;;6BAEQ;AACP,WAAKC,MAAL,CAAYG,cAAZ,CAA2B,KAAKF,MAAhC;AACD","sourcesContent":["import React from 'react';\nimport invariant from '../../utils/invariant';\n\nconst MIN_POSITION_OFFSET = 0.01;\n\n/**\n * Create a higher-order component that automatically computes the\n * `pointerEvents` property for a component whenever navigation position\n * changes.\n */\nexport default function createPointerEventsContainer(Component) {\n  class Container extends React.Component {\n    constructor(props, context) {\n      super(props, context);\n      this._pointerEvents = this._computePointerEvents();\n    }\n\n    componentWillUnmount() {\n      this._positionListener && this._positionListener.remove();\n    }\n\n    render() {\n      this._bindPosition();\n      this._pointerEvents = this._computePointerEvents();\n\n      return <Component {...this.props} pointerEvents={this._pointerEvents} onComponentRef={this._onComponentRef} />;\n    }\n\n    _onComponentRef = component => {\n      this._component = component;\n      if (component) {\n        invariant(typeof component.setNativeProps === 'function', 'component must implement method `setNativeProps`');\n      }\n    };\n\n    _bindPosition() {\n      this._positionListener && this._positionListener.remove();\n      this._positionListener = new AnimatedValueSubscription(this.props.position, this._onPositionChange);\n    }\n\n    _onPositionChange = () => {\n      if (this._component) {\n        const pointerEvents = this._computePointerEvents();\n        if (this._pointerEvents !== pointerEvents) {\n          this._pointerEvents = pointerEvents;\n          this._component.setNativeProps({ pointerEvents });\n        }\n      }\n    };\n\n    _computePointerEvents() {\n      const { navigation, position, scene } = this.props;\n\n      if (scene.isStale || navigation.state.index !== scene.index) {\n        // The scene isn't focused.\n        return scene.index > navigation.state.index ? 'box-only' : 'none';\n      }\n\n      const offset = position.__getAnimatedValue() - navigation.state.index;\n      if (Math.abs(offset) > MIN_POSITION_OFFSET) {\n        // The positon is still away from scene's index.\n        // Scene's children should not receive touches until the position\n        // is close enough to scene's index.\n        return 'box-only';\n      }\n\n      return 'auto';\n    }\n  }\n  return Container;\n}\n\nclass AnimatedValueSubscription {\n  constructor(value, callback) {\n    this._value = value;\n    this._token = value.addListener(callback);\n  }\n\n  remove() {\n    this._value.removeListener(this._token);\n  }\n}"]},"metadata":{},"sourceType":"script"}